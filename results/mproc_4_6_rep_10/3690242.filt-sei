                 finish_task_switch() {
                   _raw_spin_unlock_irq();
                 }
               } /* schedule */
               hrtimer_try_to_cancel() {
                 hrtimer_active();
                 lock_hrtimer_base() {
                   _raw_spin_lock_irqsave();
                 }
                 __remove_hrtimer();
                 _raw_spin_unlock_irqrestore();
               }
             } /* schedule_hrtimeout_range_clock */
           } /* schedule_hrtimeout_range */
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
           sock_poll() {
             tcp_poll();
           }
           fput() {
             fput_many();
           }
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
           pipe_poll();
           fput() {
             fput_many();
           }
           poll_freewait() {
             remove_wait_queue() {
               _raw_spin_lock_irqsave();
               _raw_spin_unlock_irqrestore();
             }
             fput() {
               fput_many();
             }
             remove_wait_queue() {
               _raw_spin_lock_irqsave();
               _raw_spin_unlock_irqrestore();
             }
             fput() {
               fput_many();
             }
           }
         } /* do_select */
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
       } /* core_sys_select */
       poll_select_finish() {
         ktime_get_ts64() {
           arch_counter_read();
         }
         set_normalized_timespec64();
         put_timespec64();
       }
     } /* __arm64_sys_pselect6 */
   } /* el0_svc_common.constprop.0 */
 } /* el0_svc_handler */
 do_notify_resume() {
   fpsimd_restore_current_state() {
     __get_cpu_fpsimd_context();
     task_fpsimd_load() {
       have_cpu_fpsimd_context();
     }
     fpsimd_bind_task_to_cpu();
     put_cpu_fpsimd_context() {
       __put_cpu_fpsimd_context();
     }
   }
 }
 post_ttbr_update_workaround();
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_utimensat() {
       get_timespec64();
       get_timespec64();
       do_utimes() {
         __fdget() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
         }
         utimes_common.isra.0() {
           mnt_want_write() {
             __sb_start_write();
             __mnt_want_write();
           }
           down_write();
           notify_change() {
             current_time() {
               ktime_get_coarse_real_ts64();
               timestamp_truncate();
             }
             timestamp_truncate();
             timestamp_truncate();
             security_inode_setattr() {
               evm_inode_setattr();
             }
             ovl_setattr [overlay]() {
               setattr_prepare() {
                 inode_owner_or_capable();
               }
               ovl_want_write [overlay]() {
                 mnt_want_write() {
                   __sb_start_write();
                   __mnt_want_write();
                 }
               }
               ovl_copy_up [overlay]() {
                 ovl_copy_up_flags [overlay]() {
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   ovl_already_copied_up [overlay]() {
                     ovl_dentry_needs_data_copy_up [overlay]();
                   }
                   revert_creds();
                 }
               }
               ovl_dentry_upper [overlay]();
               down_write();
               ovl_override_creds [overlay]() {
                 override_creds();
               }
               notify_change() {
                 current_time() {
                   ktime_get_coarse_real_ts64();
                   timestamp_truncate();
                 }
                 timestamp_truncate();
                 timestamp_truncate();
                 security_inode_setattr() {
                   evm_inode_setattr();
                 }
                 ext4_setattr() {
                   setattr_prepare() {
                     inode_owner_or_capable();
                   }
                   setattr_copy();
                   __mark_inode_dirty() {
                     ext4_dirty_inode() {
                       __ext4_journal_start_sb() {
                         ext4_journal_check_start();
                         jbd2__journal_start() {
                           kmem_cache_alloc() {
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                           start_this_handle() {
                             _raw_read_lock();
                             add_transaction_credits();
                             _raw_read_unlock() {
                               rcu_note_context_switch() {
                                 rcu_preempt_deferred_qs() {
                                   rcu_preempt_need_deferred_qs();
                                 }
                                 rcu_qs();
                               }
                               _raw_spin_lock();
                               update_rq_clock();
                               pick_next_task_fair() {
                                 update_curr();
                                 check_cfs_rq_runtime();
                                 pick_next_entity() {
                                   clear_buddies();
                                 }
                                 put_prev_entity() {
                                   update_curr() {
                                     update_min_vruntime();
                                     cpuacct_charge() {
                                       __rcu_read_lock();
                                       __rcu_read_unlock();
                                     }
                                     __rcu_read_lock();
                                     __cgroup_account_cputime() {
                                       cgroup_base_stat_cputime_account_begin();
                                       cgroup_base_stat_cputime_account_end.isra.0() {
                                         cgroup_rstat_updated();
                                       }
                                     }
                                     __rcu_read_unlock();
                                   }
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq() {
                                     __accumulate_pelt_segments();
                                   }
                                 }
                                 put_prev_entity() {
                                   update_curr() {
                                     __calc_delta();
                                     update_min_vruntime();
                                   }
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq() {
                                     __accumulate_pelt_segments();
                                   }
                                 }
                                 put_prev_entity() {
                                   update_curr() {
                                     __calc_delta();
                                     update_min_vruntime();
                                   }
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq() {
                                     __accumulate_pelt_segments();
                                   }
                                 }
                                 put_prev_entity() {
                                   update_curr() {
                                     __calc_delta();
                                     update_min_vruntime();
                                   }
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq() {
                                     __accumulate_pelt_segments();
                                   }
                                 }
                                 put_prev_entity() {
                                   update_curr();
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq();
                                 }
                                 set_next_entity() {
                                   __update_load_avg_se();
                                   __update_load_avg_cfs_rq();
                                 }
                               }
                               finish_task_switch() {
                                 _raw_spin_unlock_irq();
                               }
                             } /* _raw_read_unlock */
                           } /* start_this_handle */
                         } /* jbd2__journal_start */
                       } /* __ext4_journal_start_sb */
                       ext4_mark_inode_dirty() {
                         ext4_reserve_inode_write() {
                           __ext4_get_inode_loc() {
                             ext4_get_group_desc() {
                               __rcu_read_lock();
                               __rcu_read_unlock();
                             }
                             ext4_inode_table();
                             __getblk_gfp() {
                               __find_get_block() {
                                 mark_page_accessed();
                               }
                             }
                           }
                           __ext4_journal_get_write_access() {
                             jbd2_journal_get_write_access() {
                               jbd2_write_access_granted.isra.0.part.0() {
                                 __rcu_read_lock();
                                 __rcu_read_unlock();
                               }
                             }
                           }
                         }
                         ext4_mark_iloc_dirty() {
                           ext4_do_update_inode() {
                             _raw_spin_lock();
                             from_kuid() {
                               map_id_up();
                             }
                             from_kgid() {
                               map_id_up();
                             }
                             from_kprojid() {
                               map_id_up();
                             }
                             ext4_inode_csum_set();
                             _raw_spin_unlock();
                             __ext4_handle_dirty_metadata() {
                               jbd2_journal_dirty_metadata();
                             }
                             __brelse();
                           }
                         }
                       }
                       __ext4_journal_stop() {
                         jbd2_journal_stop() {
                           __wake_up() {
                             __wake_up_common_lock() {
                               _raw_spin_lock_irqsave();
                               __wake_up_common();
                               _raw_spin_unlock_irqrestore();
                             }
                           }
                           kmem_cache_free();
                         }
                       }
                     } /* ext4_dirty_inode */
                   } /* __mark_inode_dirty */
                 } /* ext4_setattr */
                 __fsnotify_parent();
                 fsnotify();
                 ima_inode_post_setattr();
                 evm_inode_post_setattr();
               } /* notify_change */
               revert_creds();
               up_write();
               ovl_drop_write [overlay]() {
                 mnt_drop_write() {
                   __mnt_drop_write();
                   __sb_end_write();
                 }
               }
             } /* ovl_setattr [overlay] */
             __fsnotify_parent();
             fsnotify();
             ima_inode_post_setattr();
             evm_inode_post_setattr();
           } /* notify_change */
           up_write();
           mnt_drop_write() {
             __mnt_drop_write();
             __sb_end_write();
           }
         } /* utimes_common.isra.0 */
         fput() {
           fput_many();
         }
       } /* do_utimes */
     } /* __arm64_sys_utimensat */
   } /* el0_svc_common.constprop.0 */
 } /* el0_svc_handler */
 do_notify_resume() {
   fpsimd_restore_current_state() {
     __get_cpu_fpsimd_context();
     task_fpsimd_load() {
       have_cpu_fpsimd_context();
     }
     fpsimd_bind_task_to_cpu();
     put_cpu_fpsimd_context() {
       __put_cpu_fpsimd_context();
     }
   }
 }
 post_ttbr_update_workaround();
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_accept4() {
       __sys_accept4() {
         sockfd_lookup_light() {
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
           arm64_preempt_schedule_irq() {
             preempt_schedule_irq() {
               rcu_note_context_switch() {
                 rcu_preempt_deferred_qs() {
                   rcu_preempt_need_deferred_qs();
                 }
                 rcu_qs();
               }
               _raw_spin_lock();
               update_rq_clock();
               pick_next_task_fair() {
                 update_curr();
                 check_cfs_rq_runtime();
                 pick_next_entity() {
                   wakeup_preempt_entity.isra.0();
                   clear_buddies();
                 }
                 put_prev_entity() {
                   update_curr() {
                     update_min_vruntime();
                     cpuacct_charge() {
                       __rcu_read_lock();
                       __rcu_read_unlock();
                     }
                     __rcu_read_lock();
                     __cgroup_account_cputime() {
                       cgroup_base_stat_cputime_account_begin();
                       cgroup_base_stat_cputime_account_end.isra.0() {
                         cgroup_rstat_updated();
                       }
                     }
                     __rcu_read_unlock();
                   }
                   check_cfs_rq_runtime();
                   __enqueue_entity();
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq() {
                     __accumulate_pelt_segments();
                   }
                 }
                 put_prev_entity() {
                   update_curr() {
                     __calc_delta();
                     update_min_vruntime();
                   }
                   check_cfs_rq_runtime();
                   __enqueue_entity();
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq() {
                     __accumulate_pelt_segments();
                   }
                 }
                 put_prev_entity() {
                   update_curr() {
                     __calc_delta();
                     update_min_vruntime();
                   }
                   check_cfs_rq_runtime();
                   __enqueue_entity();
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq() {
                     __accumulate_pelt_segments();
                   }
                 }
                 put_prev_entity() {
                   update_curr() {
                     __calc_delta();
                     update_min_vruntime();
                   }
                   check_cfs_rq_runtime();
                   __enqueue_entity();
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq() {
                     __accumulate_pelt_segments();
                   }
                 }
                 put_prev_entity() {
                   update_curr();
                   check_cfs_rq_runtime();
                   __enqueue_entity();
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq();
                 }
                 set_next_entity() {
                   __update_load_avg_se();
                   __update_load_avg_cfs_rq();
                 }
               }
