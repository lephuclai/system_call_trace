 syscall_trace_enter.constprop.0() {
   __secure_computing() {
     __seccomp_filter() {
       populate_seccomp_data();
     }
   }
 }
 __x64_sys_nanosleep() {
   get_timespec64();
   hrtimer_nanosleep() {
     __hrtimer_init();
     do_nanosleep() {
       hrtimer_start_range_ns() {
         _raw_spin_lock_irqsave();
         __hrtimer_start_range_ns() {
           ktime_get();
           get_nohz_timer_target();
           enqueue_hrtimer();
         }
         _raw_spin_unlock_irqrestore();
       }
       schedule() {
         rcu_note_context_switch();
         raw_spin_rq_lock_nested() {
           _raw_spin_lock();
         }
         update_rq_clock();
         dequeue_task_fair() {
           dequeue_entity() {
             update_curr() {
               update_min_vruntime();
               cpuacct_charge();
               __cgroup_account_cputime() {
                 cgroup_rstat_updated();
               }
             }
             __update_load_avg_se();
             __update_load_avg_cfs_rq();
             clear_buddies();
             update_cfs_group();
             update_min_vruntime();
           }
           dequeue_entity() {
             update_curr() {
               update_min_vruntime();
             }
             __update_load_avg_se();
             __update_load_avg_cfs_rq();
             clear_buddies();
             update_cfs_group() {
               reweight_entity();
             }
             update_min_vruntime();
           }
           dequeue_entity() {
             update_curr() {
               update_min_vruntime();
             }
             __update_load_avg_se();
             __update_load_avg_cfs_rq();
             clear_buddies();
             update_cfs_group() {
               reweight_entity();
             }
             update_min_vruntime();
           }
           hrtick_update();
         }
         pick_next_task() {
           pick_next_task_fair() {
             newidle_balance() {
               __rcu_read_lock();
               __msecs_to_jiffies();
               __rcu_read_unlock();
             }
           }
           put_prev_task_fair() {
             put_prev_entity() {
               check_cfs_rq_runtime();
             }
             put_prev_entity() {
               check_cfs_rq_runtime();
             }
             put_prev_entity() {
               check_cfs_rq_runtime();
             }
           }
           pick_next_task_idle() {
             __update_idle_core() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
         }
         psi_task_switch() {
           psi_flags_change();
           psi_group_change() {
             record_times();
           }
           psi_group_change() {
             record_times();
           }
           psi_group_change() {
             record_times();
           }
         }
         __traceiter_sched_switch() {
           _raw_spin_lock_irqsave();
           _raw_spin_unlock_irqrestore();
         }
         finish_task_switch.isra.0() {
           raw_spin_rq_unlock() {
             _raw_spin_unlock();
           }
         }
       } /* schedule */
       hrtimer_active();
     } /* do_nanosleep */
   } /* hrtimer_nanosleep */
 } /* __x64_sys_nanosleep */
 exit_to_user_mode_prepare() {
   fpregs_assert_state_consistent();
   switch_fpu_return() {
     restore_fpregs_from_fpstate() {
       xfd_validate_state();
     }
   }
 }
 syscall_trace_enter.constprop.0() {
   __secure_computing() {
     __seccomp_filter() {
       populate_seccomp_data();
     }
   }
 }
 __x64_sys_nanosleep() {
   get_timespec64();
   hrtimer_nanosleep() {
     __hrtimer_init();
     do_nanosleep() {
       hrtimer_start_range_ns() {
         _raw_spin_lock_irqsave();
         __hrtimer_start_range_ns() {
           ktime_get();
           get_nohz_timer_target();
           enqueue_hrtimer();
         }
         _raw_spin_unlock_irqrestore();
       }
       schedule() {
         rcu_note_context_switch();
         raw_spin_rq_lock_nested() {
           _raw_spin_lock();
         }
         update_rq_clock();
         dequeue_task_fair() {
           dequeue_entity() {
             update_curr() {
               update_min_vruntime();
               cpuacct_charge();
               __cgroup_account_cputime() {
                 cgroup_rstat_updated();
               }
             }
             __update_load_avg_se();
             __update_load_avg_cfs_rq();
             clear_buddies();
             update_cfs_group();
             update_min_vruntime();
           }
           set_next_buddy();
           __update_load_avg_se();
           __update_load_avg_cfs_rq();
           update_cfs_group() {
             reweight_entity() {
               update_curr() {
                 update_min_vruntime();
               }
             }
           }
           __update_load_avg_se();
           __update_load_avg_cfs_rq();
           update_cfs_group() {
             reweight_entity() {
               update_curr() {
                 update_min_vruntime();
               }
             }
           }
           hrtick_update();
         }
         pick_next_task() {
           pick_next_task_fair() {
             update_curr();
             check_cfs_rq_runtime();
             pick_next_entity();
             update_curr();
             check_cfs_rq_runtime();
             pick_next_entity();
             check_cfs_rq_runtime();
             pick_next_entity();
             put_prev_entity() {
               check_cfs_rq_runtime();
             }
             set_next_entity() {
               clear_buddies();
               __update_load_avg_se();
               __update_load_avg_cfs_rq();
             }
           }
         }
         psi_task_switch() {
           psi_flags_change();
           psi_flags_change();
           psi_group_change() {
             record_times();
           }
           psi_group_change() {
             record_times();
           }
           psi_group_change() {
             record_times();
           }
         }
         __traceiter_sched_switch() {
           _raw_spin_lock_irqsave();
           _raw_spin_unlock_irqrestore();
         }
         switch_mm_irqs_off();
         save_fpregs_to_fpstate() {
           xfd_validate_state();
         }
         finish_task_switch.isra.0() {
           raw_spin_rq_unlock() {
             _raw_spin_unlock();
           }
         }
       } /* schedule */
       hrtimer_active();
     } /* do_nanosleep */
   } /* hrtimer_nanosleep */
 } /* __x64_sys_nanosleep */
 exit_to_user_mode_prepare() {
   fpregs_assert_state_consistent();
   switch_fpu_return() {
     restore_fpregs_from_fpstate() {
       xfd_validate_state();
     }
   }
 }
 syscall_trace_enter.constprop.0() {
   __secure_computing() {
     __seccomp_filter() {
       populate_seccomp_data();
     }
   }
 }
 __x64_sys_nanosleep() {
   get_timespec64();
   hrtimer_nanosleep() {
     __hrtimer_init();
     do_nanosleep() {
       hrtimer_start_range_ns() {
         _raw_spin_lock_irqsave();
         __hrtimer_start_range_ns() {
           ktime_get();
           get_nohz_timer_target();
           enqueue_hrtimer();
         }
         _raw_spin_unlock_irqrestore();
       }
       schedule() {
         rcu_note_context_switch();
         raw_spin_rq_lock_nested() {
           _raw_spin_lock();
         }
         update_rq_clock();
         dequeue_task_fair() {
           dequeue_entity() {
             update_curr() {
               update_min_vruntime();
               cpuacct_charge();
               __cgroup_account_cputime() {
                 cgroup_rstat_updated();
               }
             }
             __update_load_avg_se();
             __update_load_avg_cfs_rq();
             clear_buddies();
             update_cfs_group();
             update_min_vruntime();
           }
           dequeue_entity() {
             update_curr() {
               update_min_vruntime();
             }
             __update_load_avg_se();
             __update_load_avg_cfs_rq();
             clear_buddies();
             update_cfs_group() {
               reweight_entity();
             }
             update_min_vruntime();
           }
           dequeue_entity() {
             update_curr() {
               update_min_vruntime();
             }
             __update_load_avg_se();
             __update_load_avg_cfs_rq();
             clear_buddies();
             update_cfs_group() {
               reweight_entity();
             }
             update_min_vruntime();
           }
           hrtick_update();
         }
         pick_next_task() {
           pick_next_task_fair() {
             newidle_balance() {
               __rcu_read_lock();
               __msecs_to_jiffies();
               __rcu_read_unlock();
             }
           }
           put_prev_task_fair() {
             put_prev_entity() {
               check_cfs_rq_runtime();
             }
             put_prev_entity() {
               check_cfs_rq_runtime();
             }
             put_prev_entity() {
               check_cfs_rq_runtime();
             }
           }
           pick_next_task_idle() {
             __update_idle_core() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
         }
         psi_task_switch() {
           psi_flags_change();
           psi_group_change() {
             record_times();
           }
           psi_group_change() {
             record_times();
           }
           psi_group_change() {
             record_times();
           }
         }
         __traceiter_sched_switch() {
           _raw_spin_lock_irqsave();
           _raw_spin_unlock_irqrestore();
         }
         finish_task_switch.isra.0() {
           raw_spin_rq_unlock() {
             _raw_spin_unlock();
           }
         }
       } /* schedule */
       hrtimer_active();
     } /* do_nanosleep */
   } /* hrtimer_nanosleep */
 } /* __x64_sys_nanosleep */
 exit_to_user_mode_prepare() {
   fpregs_assert_state_consistent();
   switch_fpu_return() {
     restore_fpregs_from_fpstate() {
       xfd_validate_state();
     }
   }
 }
 syscall_trace_enter.constprop.0() {
   __secure_computing() {
     __seccomp_filter() {
       populate_seccomp_data();
     }
   }
 }
 __x64_sys_nanosleep() {
   get_timespec64();
   hrtimer_nanosleep() {
     __hrtimer_init();
     do_nanosleep() {
       hrtimer_start_range_ns() {
         _raw_spin_lock_irqsave();
         __hrtimer_start_range_ns() {
           ktime_get();
           get_nohz_timer_target();
           enqueue_hrtimer();
         }
         _raw_spin_unlock_irqrestore();
       }
       schedule() {
         rcu_note_context_switch();
         raw_spin_rq_lock_nested() {
           _raw_spin_lock();
         }
         update_rq_clock();
         dequeue_task_fair() {
           dequeue_entity() {
             update_curr() {
               update_min_vruntime();
               cpuacct_charge();
               __cgroup_account_cputime() {
                 cgroup_rstat_updated();
               }
             }
             __update_load_avg_se();
             __update_load_avg_cfs_rq();
             clear_buddies();
             update_cfs_group();
             update_min_vruntime();
           }
           set_next_buddy();
           __update_load_avg_se();
           __update_load_avg_cfs_rq();
           update_cfs_group() {
             reweight_entity() {
               update_curr() {
                 update_min_vruntime();
               }
             }
           }
           __update_load_avg_se();
           __update_load_avg_cfs_rq();
           update_cfs_group() {
             reweight_entity() {
               update_curr() {
                 update_min_vruntime();
               }
             }
           }
           hrtick_update();
         }
         pick_next_task() {
           pick_next_task_fair() {
             update_curr();
             check_cfs_rq_runtime();
             pick_next_entity();
             update_curr();
             check_cfs_rq_runtime();
             pick_next_entity();
             check_cfs_rq_runtime();
             pick_next_entity();
             put_prev_entity() {
               check_cfs_rq_runtime();
             }
             set_next_entity() {
               clear_buddies();
               __update_load_avg_se();
               __update_load_avg_cfs_rq();
             }
           }
         }
         psi_task_switch() {
           psi_flags_change();
           psi_flags_change();
           psi_group_change() {
             record_times();
           }
           psi_group_change() {
             record_times();
           }
           psi_group_change() {
             record_times();
           }
         }
         __traceiter_sched_switch() {
           _raw_spin_lock_irqsave();
           _raw_spin_unlock_irqrestore();
         }
         switch_mm_irqs_off();
         save_fpregs_to_fpstate() {
           xfd_validate_state();
         }
