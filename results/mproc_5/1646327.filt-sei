               finish_task_switch() {
                 _raw_spin_unlock_irq();
               }
             }
           }
           _raw_spin_lock();
           __unqueue_futex();
           _raw_spin_unlock();
           drop_futex_key_refs.isra.0();
           hrtimer_cancel() {
             hrtimer_try_to_cancel() {
               hrtimer_active();
             }
           }
         }
       }
     } /* __arm64_sys_futex */
   } /* el0_svc_common.constprop.0 */
 } /* el0_svc_handler */
 do_notify_resume() {
   fpsimd_restore_current_state() {
     __get_cpu_fpsimd_context();
     task_fpsimd_load() {
       have_cpu_fpsimd_context();
     }
     fpsimd_bind_task_to_cpu();
     put_cpu_fpsimd_context() {
       __put_cpu_fpsimd_context();
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_futex() {
       do_futex() {
         futex_wake() {
           get_futex_key() {
             get_futex_key_refs.isra.0();
           }
           hash_futex();
           drop_futex_key_refs.isra.0();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_openat() {
       do_sys_open() {
         getname() {
           getname_flags() {
             kmem_cache_alloc() {
               should_failslab();
               memcg_kmem_put_cache();
             }
             __check_object_size() {
               check_stack_object();
               pfn_valid() {
                 memblock_is_map_memory();
               }
               __check_heap_object();
             }
           }
         }
         get_unused_fd_flags() {
           __alloc_fd() {
             _raw_spin_lock();
             expand_files();
             _raw_spin_unlock();
           }
         }
         do_filp_open() {
           path_openat() {
             alloc_empty_file() {
               __alloc_file() {
                 kmem_cache_alloc() {
                   should_failslab();
                   memcg_kmem_get_cache() {
                     __rcu_read_lock();
                     __rcu_read_unlock();
                   }
                   memcg_kmem_put_cache();
                 }
                 security_file_alloc() {
                   kmem_cache_alloc() {
                     should_failslab();
                     memcg_kmem_put_cache();
                   }
                   apparmor_file_alloc_security();
                 }
                 __mutex_init();
               }
             }
             path_init() {
               __rcu_read_lock();
               set_root();
               nd_jump_root();
             }
             link_path_walk.part.0() {
               inode_permission() {
                 ovl_permission [overlay]() {
                   ovl_inode_upper [overlay]();
                   generic_permission();
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   inode_permission() {
                     generic_permission();
                     security_inode_permission();
                   }
                   revert_creds();
                 }
                 security_inode_permission();
               }
               walk_component() {
                 lookup_fast() {
                   __d_lookup_rcu();
                   __follow_mount_rcu.isra.0();
                 }
               }
               inode_permission() {
                 ovl_permission [overlay]() {
                   ovl_inode_upper [overlay]();
                   generic_permission();
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   inode_permission() {
                     generic_permission();
                     security_inode_permission();
                   }
                   revert_creds();
                 }
                 security_inode_permission();
               }
               walk_component() {
                 lookup_fast() {
                   __d_lookup_rcu();
                   __follow_mount_rcu.isra.0();
                 }
               }
               inode_permission() {
                 ovl_permission [overlay]() {
                   ovl_inode_upper [overlay]();
                   generic_permission();
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   inode_permission() {
                     generic_permission();
                     security_inode_permission();
                   }
                   revert_creds();
                 }
                 security_inode_permission();
               }
             }
             do_last() {
               lookup_fast() {
                 __d_lookup_rcu();
                 __follow_mount_rcu.isra.0();
               }
               complete_walk() {
                 unlazy_walk() {
                   legitimize_links();
                   legitimize_path.isra.0() {
                     __legitimize_mnt() {
                       __legitimize_mnt.part.0();
                     }
                   }
                   legitimize_root();
                   __rcu_read_unlock();
                 }
               }
               may_open.isra.0() {
                 inode_permission() {
                   ovl_permission [overlay]() {
                     ovl_inode_upper [overlay]();
                     generic_permission();
                     ovl_override_creds [overlay]() {
                       override_creds();
                     }
                     inode_permission() {
                       generic_permission();
                       security_inode_permission();
                     }
                     revert_creds();
                   }
                   security_inode_permission();
                 }
               }
               vfs_open() {
                 do_dentry_open() {
                   path_get() {
                     mntget();
                   }
                   try_module_get();
                   security_file_open() {
                     apparmor_file_open() {
                       aa_path_perm() {
                         aa_label_next_confined();
                         profile_path_perm.part.0() {
                           path_name.isra.0() {
                             aa_path_name() {
                               d_namespace_path.constprop.0() {
                                 d_absolute_path() {
                                   prepend();
                                   prepend_path.isra.0() {
                                     __rcu_read_lock();
                                     __rcu_read_lock();
                                     prepend_name();
                                     prepend_name();
                                     prepend_name();
                                     __rcu_read_unlock();
                                     __rcu_read_unlock();
                                   }
                                 }
                                 our_mnt();
                                 our_mnt();
                               }
                             }
                           }
                           __aa_path_perm() {
                             aa_str_perms() {
                               aa_dfa_match();
                               aa_compute_fperms() {
                                 map_old_perms();
                                 map_old_perms();
                                 map_old_perms();
                               }
                             }
                             aa_audit_file();
                           }
                         }
                         aa_label_next_confined();
                       }
                     }
                     __fsnotify_parent();
                     fsnotify();
                   }
                   ovl_dir_open [overlay]() {
                     kmem_cache_alloc_trace() {
                       should_failslab();
                       memcg_kmem_put_cache();
                     }
                     ovl_path_real [overlay]() {
                       ovl_path_type [overlay]();
                     }
                     ovl_override_creds [overlay]() {
                       override_creds();
                     }
                     ovl_path_open [overlay]() {
                       inode_permission() {
                         generic_permission();
                         security_inode_permission();
                       }
                       inode_owner_or_capable();
                       dentry_open() {
                         alloc_empty_file() {
                           __alloc_file() {
                             kmem_cache_alloc() {
                               should_failslab();
                               memcg_kmem_get_cache() {
                                 __rcu_read_lock();
                                 __rcu_read_unlock();
                               }
                               memcg_kmem_put_cache();
                             }
                             security_file_alloc() {
                               kmem_cache_alloc() {
                                 should_failslab();
                                 memcg_kmem_put_cache();
                               }
                               apparmor_file_alloc_security();
                             }
                             __mutex_init();
                           }
                         }
                         do_dentry_open() {
                           path_get() {
                             mntget();
                           }
                           try_module_get();
                           security_file_open() {
                             apparmor_file_open();
                             __fsnotify_parent();
                             fsnotify();
                           }
                           ext4_dir_open();
                           file_ra_state_init();
                         }
                       }
                     }
                     revert_creds();
                     ovl_test_flag [overlay]();
                   }
                   file_ra_state_init();
                 }
               }
               ima_file_check() {
                 security_task_getsecid();
                 process_measurement();
               }
             }
             terminate_walk() {
               dput() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
               mntput() {
                 mntput_no_expire() {
                   __rcu_read_lock();
                   __rcu_read_unlock();
                 }
               }
             }
           }
           restore_nameidata();
         }
         __fsnotify_parent();
         fsnotify();
         fd_install() {
           __fd_install();
         }
         putname() {
           kmem_cache_free();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_newfstat() {
       vfs_statx_fd() {
         __fdget_raw() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
         }
         vfs_getattr() {
           security_inode_getattr() {
             apparmor_inode_getattr() {
               common_perm_cond() {
                 common_perm() {
                   aa_path_perm() {
                     aa_label_next_confined();
                     profile_path_perm.part.0() {
                       path_name.isra.0() {
                         aa_path_name() {
                           d_namespace_path.constprop.0() {
                             d_absolute_path() {
                               prepend();
                               prepend_path.isra.0() {
                                 __rcu_read_lock();
                                 __rcu_read_lock();
                                 prepend_name();
                                 prepend_name();
                                 prepend_name();
                                 __rcu_read_unlock();
                                 __rcu_read_unlock();
                               }
                             }
                             our_mnt();
                             our_mnt();
                           }
                         }
                       }
                       __aa_path_perm() {
                         aa_str_perms() {
                           aa_dfa_match();
                           aa_compute_fperms() {
                             map_old_perms();
                             map_old_perms();
                             map_old_perms();
                           }
                         }
                         aa_audit_file();
                       }
                     }
                     aa_label_next_confined();
                   }
                 }
               }
             }
           }
           vfs_getattr_nosec() {
             ovl_getattr [overlay]() {
               ovl_same_sb [overlay]();
               ovl_is_metacopy_dentry [overlay]();
               ovl_path_real [overlay]() {
                 ovl_path_type [overlay]();
               }
               ovl_override_creds [overlay]() {
                 override_creds();
               }
               vfs_getattr() {
                 security_inode_getattr() {
                   apparmor_inode_getattr() {
                     common_perm_cond() {
                       common_perm();
                     }
                   }
                 }
                 vfs_getattr_nosec() {
                   ext4_getattr() {
                     generic_fillattr();
                   }
                 }
               }
               ovl_same_sb [overlay]();
               revert_creds();
             }
           }
         }
         fput() {
           fput_many();
         }
       }
       cp_new_stat() {
         from_kuid_munged() {
           map_id_up();
         }
         from_kgid_munged() {
           map_id_up();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_getdents64() {
       ksys_getdents64() {
         __fdget_pos() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
           mutex_lock();
         }
         iterate_dir() {
           security_file_permission() {
             apparmor_file_permission() {
               common_file_perm() {
                 aa_file_perm() {
                   __rcu_read_lock();
                   aa_label_is_subset();
                   __rcu_read_unlock();
                 }
               }
             }
             __fsnotify_parent();
             fsnotify();
           }
           down_write_killable();
           ovl_iterate [overlay]() {
             ovl_override_creds [overlay]() {
               override_creds();
             }
             ovl_dir_reset.isra.0 [overlay]() {
               ovl_test_flag [overlay]();
             }
             ovl_same_sb [overlay]();
             ovl_test_flag [overlay]();
             ovl_path_type [overlay]();
             ovl_iterate_real [overlay]() {
               ovl_layer_lower [overlay]();
               ovl_path_type [overlay]();
               vfs_getattr() {
                 security_inode_getattr() {
                   apparmor_inode_getattr() {
                     common_perm_cond() {
                       common_perm();
                     }
                   }
                 }
                 vfs_getattr_nosec() {
                   ovl_getattr [overlay]() {
                     ovl_same_sb [overlay]();
                     ovl_is_metacopy_dentry [overlay]();
                     ovl_path_real [overlay]() {
                       ovl_path_type [overlay]();
                     }
                     ovl_override_creds [overlay]() {
                       override_creds();
                     }
                     vfs_getattr() {
                       security_inode_getattr() {
                         apparmor_inode_getattr() {
                           common_perm_cond() {
                             common_perm();
                           }
                         }
                       }
                       vfs_getattr_nosec() {
                         ext4_getattr() {
                           generic_fillattr();
                         }
                       }
                     }
                     ovl_path_lower [overlay]();
                     vfs_getattr() {
                       security_inode_getattr() {
                         apparmor_inode_getattr() {
                           common_perm_cond() {
                             common_perm();
                           }
                         }
                       }
                       vfs_getattr_nosec() {
                         ext4_getattr() {
                           generic_fillattr();
                         }
                       }
                     }
                     ovl_test_flag [overlay]();
                     ovl_verify_lower [overlay]() {
                       ovl_index_all [overlay]();
                     }
                     ovl_layer_lower [overlay]();
                     ovl_same_sb [overlay]();
                     revert_creds();
                   }
                 }
               }
               ovl_test_flag [overlay]();
               iterate_dir() {
                 security_file_permission() {
                   apparmor_file_permission() {
                     common_file_perm() {
                       aa_file_perm() {
                         __rcu_read_lock();
                         __rcu_read_unlock();
                       }
                     }
                   }
                   __fsnotify_parent();
                   fsnotify();
                 }
                 down_read_killable();
                 ext4_readdir() {
                   is_dx_dir();
                   ext4_dx_readdir() {
                     kmem_cache_alloc_trace() {
                       should_failslab();
                       memcg_kmem_put_cache();
                     }
                     free_rb_tree_fname();
                     ext4_htree_fill_tree() {
                       htree_dirblock_to_tree() {
                         __ext4_read_dirblock() {
                           __ext4_read_dirblock.part.0() {
                             ext4_bread() {
                               ext4_getblk() {
                                 ext4_map_blocks() {
                                   ext4_es_lookup_extent() {
                                     _raw_read_lock();
                                     _raw_read_unlock();
                                   }
                                   __check_block_validity.constprop.0() {
                                     ext4_inode_block_valid() {
                                       __rcu_read_lock();
                                       __rcu_read_unlock();
                                     }
                                   }
                                 }
                                 __getblk_gfp() {
                                   __find_get_block() {
                                     mark_page_accessed();
                                   }
                                 }
                               }
                             }
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __brelse();
                         fscrypt_fname_free_buffer() {
                           kfree();
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                   }
                 }
                 __fsnotify_parent();
                 fsnotify();
                 up_read();
               }
             }
             revert_creds();
           }
           __fsnotify_parent();
           fsnotify();
           touch_atime() {
             atime_needs_update() {
               current_time() {
                 ktime_get_coarse_real_ts64();
                 timestamp_truncate();
               }
             }
           }
           up_write();
         }
         __f_unlock_pos() {
           mutex_unlock();
         }
         fput() {
           fput_many();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_getdents64() {
       ksys_getdents64() {
         __fdget_pos() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
           mutex_lock();
         }
         iterate_dir() {
           security_file_permission() {
             apparmor_file_permission() {
               common_file_perm() {
                 aa_file_perm() {
                   __rcu_read_lock();
                   aa_label_is_subset();
                   __rcu_read_unlock();
                 }
               }
             }
             __fsnotify_parent();
             fsnotify();
           }
           down_write_killable();
           ovl_iterate [overlay]() {
             ovl_override_creds [overlay]() {
               override_creds();
             }
             ovl_same_sb [overlay]();
             ovl_test_flag [overlay]();
             ovl_path_type [overlay]();
             ovl_iterate_real [overlay]() {
               ovl_layer_lower [overlay]();
               ovl_path_type [overlay]();
               vfs_getattr() {
                 security_inode_getattr() {
                   apparmor_inode_getattr() {
                     common_perm_cond() {
                       common_perm();
                     }
                   }
                 }
                 vfs_getattr_nosec() {
                   ovl_getattr [overlay]() {
                     ovl_same_sb [overlay]();
                     ovl_is_metacopy_dentry [overlay]();
                     ovl_path_real [overlay]() {
                       ovl_path_type [overlay]();
                     }
                     ovl_override_creds [overlay]() {
                       override_creds();
                     }
                     vfs_getattr() {
                       security_inode_getattr() {
                         apparmor_inode_getattr() {
                           common_perm_cond() {
                             common_perm();
                           }
                         }
                       }
                       vfs_getattr_nosec() {
                         ext4_getattr() {
                           generic_fillattr();
                         }
                       }
                     }
                     ovl_path_lower [overlay]();
                     vfs_getattr() {
                       security_inode_getattr() {
                         apparmor_inode_getattr() {
                           common_perm_cond() {
                             common_perm();
                           }
                         }
                       }
                       vfs_getattr_nosec() {
                         ext4_getattr() {
                           generic_fillattr();
                         }
                       }
                     }
                     ovl_test_flag [overlay]();
                     ovl_verify_lower [overlay]() {
                       ovl_index_all [overlay]();
                     }
                     ovl_layer_lower [overlay]();
                     ovl_same_sb [overlay]();
                     revert_creds();
                   }
                 }
               }
               ovl_test_flag [overlay]();
               iterate_dir() {
                 security_file_permission() {
                   apparmor_file_permission() {
                     common_file_perm() {
                       aa_file_perm() {
                         __rcu_read_lock();
                         __rcu_read_unlock();
                       }
                     }
                   }
                   __fsnotify_parent();
                   fsnotify();
                 }
                 down_read_killable();
                 ext4_readdir() {
                   is_dx_dir();
                   ext4_dx_readdir();
                 }
                 __fsnotify_parent();
                 fsnotify();
                 up_read();
               }
             }
             revert_creds();
           }
           __fsnotify_parent();
           fsnotify();
           touch_atime() {
             atime_needs_update() {
               current_time() {
                 ktime_get_coarse_real_ts64();
                 timestamp_truncate();
               }
             }
           }
           up_write();
         }
         __f_unlock_pos() {
           mutex_unlock();
         }
         fput() {
           fput_many();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_close() {
       __close_fd() {
         _raw_spin_lock();
         _raw_spin_unlock();
         filp_close() {
           dnotify_flush() {
             fsnotify_find_mark() {
               fsnotify_grab_connector() {
                 __srcu_read_lock();
                 __srcu_read_unlock();
               }
             }
           }
           locks_remove_posix();
           fput() {
             fput_many() {
               task_work_add() {
                 kick_process();
               }
             }
           }
         }
       }
     }
   }
 }
 do_notify_resume() {
   task_work_run() {
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
     ____fput() {
       __fput() {
         __fsnotify_parent();
         fsnotify();
         locks_remove_file();
         ima_file_free();
         ovl_dir_release [overlay]() {
           fput() {
             fput_many() {
               task_work_add() {
                 kick_process();
               }
             }
           }
           kfree();
         }
         module_put();
         put_pid();
         dput() {
           __rcu_read_lock();
           __rcu_read_unlock();
         }
         mntput() {
           mntput_no_expire() {
             __rcu_read_lock();
             __rcu_read_unlock();
           }
         }
         security_file_free() {
           apparmor_file_free_security();
           kmem_cache_free();
         }
         call_rcu() {
           __call_rcu() {
             rcu_segcblist_enqueue();
           }
         }
       }
     }
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
     ____fput() {
       __fput() {
         __fsnotify_parent();
         fsnotify();
         locks_remove_file();
         ima_file_free();
         ext4_release_dir() {
           free_rb_tree_fname() {
             kfree();
             kfree();
             kfree();
             kfree();
             kfree();
           }
           kfree();
         }
         module_put();
         put_pid();
         dput() {
           __rcu_read_lock();
           __rcu_read_unlock();
         }
         mntput() {
           mntput_no_expire() {
             __rcu_read_lock();
             _raw_spin_lock();
             mnt_get_count();
             __rcu_read_unlock();
             _raw_spin_unlock();
           }
         }
         security_file_free() {
           apparmor_file_free_security();
           kmem_cache_free();
         }
         call_rcu() {
           __call_rcu() {
             rcu_segcblist_enqueue();
           }
         }
       }
     }
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
   }
   mem_cgroup_handle_over_high();
   blkcg_maybe_throttle_current();
   mem_cgroup_handle_over_high();
   blkcg_maybe_throttle_current();
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_openat() {
       do_sys_open() {
         getname() {
           getname_flags() {
             kmem_cache_alloc() {
               should_failslab();
               memcg_kmem_put_cache();
             }
             __check_object_size() {
               check_stack_object();
               pfn_valid() {
                 memblock_is_map_memory();
               }
               __check_heap_object();
             }
           }
         }
         get_unused_fd_flags() {
           __alloc_fd() {
             _raw_spin_lock();
             expand_files();
             _raw_spin_unlock();
           }
         }
         do_filp_open() {
           path_openat() {
             alloc_empty_file() {
               __alloc_file() {
                 kmem_cache_alloc() {
                   should_failslab();
                   memcg_kmem_get_cache() {
                     __rcu_read_lock();
                     __rcu_read_unlock();
                   }
                   memcg_kmem_put_cache();
                 }
                 security_file_alloc() {
                   kmem_cache_alloc() {
                     should_failslab();
                     memcg_kmem_put_cache();
                   }
                   apparmor_file_alloc_security();
                 }
                 __mutex_init();
               }
             }
             path_init() {
               __rcu_read_lock();
               set_root();
               nd_jump_root();
             }
             link_path_walk.part.0() {
               inode_permission() {
                 ovl_permission [overlay]() {
                   ovl_inode_upper [overlay]();
                   generic_permission();
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   inode_permission() {
                     generic_permission();
                     security_inode_permission();
                   }
                   revert_creds();
                 }
                 security_inode_permission();
               }
               walk_component() {
                 lookup_fast() {
                   __d_lookup_rcu();
                   __follow_mount_rcu.isra.0();
                 }
               }
               inode_permission() {
                 ovl_permission [overlay]() {
                   ovl_inode_upper [overlay]();
                   generic_permission();
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   inode_permission() {
                     generic_permission();
                     security_inode_permission();
                   }
                   revert_creds();
                 }
                 security_inode_permission();
               }
               walk_component() {
                 lookup_fast() {
                   __d_lookup_rcu();
                   __follow_mount_rcu.isra.0();
                 }
               }
               inode_permission() {
                 ovl_permission [overlay]() {
                   ovl_inode_upper [overlay]();
                   generic_permission();
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   inode_permission() {
                     generic_permission();
                     security_inode_permission();
                   }
                   revert_creds();
                 }
                 security_inode_permission();
               }
             }
             do_last() {
               lookup_fast() {
                 __d_lookup_rcu();
                 __follow_mount_rcu.isra.0();
               }
               complete_walk() {
                 unlazy_walk() {
                   legitimize_links();
                   legitimize_path.isra.0() {
                     __legitimize_mnt() {
                       __legitimize_mnt.part.0();
                     }
                   }
                   legitimize_root();
                   __rcu_read_unlock();
                 }
               }
               may_open.isra.0() {
                 inode_permission() {
                   ovl_permission [overlay]() {
                     ovl_inode_upper [overlay]();
                     generic_permission();
                     ovl_override_creds [overlay]() {
                       override_creds();
                     }
                     inode_permission() {
                       generic_permission();
                       security_inode_permission();
                     }
                     revert_creds();
                   }
                   security_inode_permission();
                 }
               }
               vfs_open() {
                 do_dentry_open() {
                   path_get() {
                     mntget();
                   }
                   try_module_get();
                   security_file_open() {
                     apparmor_file_open() {
                       aa_path_perm() {
                         aa_label_next_confined();
                         profile_path_perm.part.0() {
                           path_name.isra.0() {
                             aa_path_name() {
                               d_namespace_path.constprop.0() {
                                 d_absolute_path() {
                                   prepend();
                                   prepend_path.isra.0() {
                                     __rcu_read_lock();
                                     __rcu_read_lock();
                                     prepend_name();
                                     prepend_name();
                                     prepend_name();
                                     __rcu_read_unlock();
                                     __rcu_read_unlock();
                                   }
                                 }
                                 our_mnt();
                                 our_mnt();
                               }
                             }
                           }
                           __aa_path_perm() {
                             aa_str_perms() {
                               aa_dfa_match();
                               aa_compute_fperms() {
                                 map_old_perms();
                                 map_old_perms();
                                 map_old_perms();
                               }
                             }
                             aa_audit_file();
                           }
                         }
                         aa_label_next_confined();
                       }
                     }
                     __fsnotify_parent();
                     fsnotify();
                   }
                   ovl_dir_open [overlay]() {
                     kmem_cache_alloc_trace() {
                       should_failslab();
                       memcg_kmem_put_cache();
                     }
                     ovl_path_real [overlay]() {
                       ovl_path_type [overlay]();
                     }
                     ovl_override_creds [overlay]() {
                       override_creds();
                     }
                     ovl_path_open [overlay]() {
                       inode_permission() {
                         generic_permission();
                         security_inode_permission();
                       }
                       inode_owner_or_capable();
                       dentry_open() {
                         alloc_empty_file() {
                           __alloc_file() {
                             kmem_cache_alloc() {
                               should_failslab();
                               memcg_kmem_get_cache() {
                                 __rcu_read_lock();
                                 __rcu_read_unlock();
                               }
                               memcg_kmem_put_cache();
                             }
                             security_file_alloc() {
                               kmem_cache_alloc() {
                                 should_failslab();
                                 memcg_kmem_put_cache();
                               }
                               apparmor_file_alloc_security();
                             }
                             __mutex_init();
                           }
                         }
                         do_dentry_open() {
                           path_get() {
                             mntget();
                           }
                           try_module_get();
                           security_file_open() {
                             apparmor_file_open();
                             __fsnotify_parent();
                             fsnotify();
                           }
                           ext4_dir_open();
                           file_ra_state_init();
                         }
                       }
                     }
                     revert_creds();
                     ovl_test_flag [overlay]();
                   }
                   file_ra_state_init();
                 }
               }
               ima_file_check() {
                 security_task_getsecid();
                 process_measurement();
               }
             }
             terminate_walk() {
               dput() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
               mntput() {
                 mntput_no_expire() {
                   __rcu_read_lock();
                   __rcu_read_unlock();
                 }
               }
             }
           }
           restore_nameidata();
         }
         __fsnotify_parent();
         fsnotify();
         fd_install() {
           __fd_install();
         }
         putname() {
           kmem_cache_free();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_newfstat() {
       vfs_statx_fd() {
         __fdget_raw() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
         }
         vfs_getattr() {
           security_inode_getattr() {
             apparmor_inode_getattr() {
               common_perm_cond() {
                 common_perm() {
                   aa_path_perm() {
                     aa_label_next_confined();
                     profile_path_perm.part.0() {
                       path_name.isra.0() {
                         aa_path_name() {
                           d_namespace_path.constprop.0() {
                             d_absolute_path() {
                               prepend();
                               prepend_path.isra.0() {
                                 __rcu_read_lock();
                                 __rcu_read_lock();
                                 prepend_name();
                                 prepend_name();
                                 prepend_name();
                                 __rcu_read_unlock();
                                 __rcu_read_unlock();
                               }
                             }
                             our_mnt();
                             our_mnt();
                           }
                         }
                       }
                       __aa_path_perm() {
                         aa_str_perms() {
                           aa_dfa_match();
                           aa_compute_fperms() {
                             map_old_perms();
                             map_old_perms();
                             map_old_perms();
                           }
                         }
                         aa_audit_file();
                       }
                     }
                     aa_label_next_confined();
                   }
                 }
               }
             }
           }
           vfs_getattr_nosec() {
             ovl_getattr [overlay]() {
               ovl_same_sb [overlay]();
               ovl_is_metacopy_dentry [overlay]();
               ovl_path_real [overlay]() {
                 ovl_path_type [overlay]();
               }
               ovl_override_creds [overlay]() {
                 override_creds();
               }
               vfs_getattr() {
                 security_inode_getattr() {
                   apparmor_inode_getattr() {
                     common_perm_cond() {
                       common_perm();
                     }
                   }
                 }
                 vfs_getattr_nosec() {
                   ext4_getattr() {
                     generic_fillattr();
                   }
                 }
               }
               ovl_same_sb [overlay]();
               revert_creds();
             }
           }
         }
         fput() {
           fput_many();
         }
       }
       cp_new_stat() {
         from_kuid_munged() {
           map_id_up();
         }
         from_kgid_munged() {
           map_id_up();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_getdents64() {
       ksys_getdents64() {
         __fdget_pos() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
           mutex_lock();
         }
         iterate_dir() {
           security_file_permission() {
             apparmor_file_permission() {
               common_file_perm() {
                 aa_file_perm() {
                   __rcu_read_lock();
                   aa_label_is_subset();
                   __rcu_read_unlock();
                 }
               }
             }
             __fsnotify_parent();
             fsnotify();
           }
           down_write_killable();
           ovl_iterate [overlay]() {
             ovl_override_creds [overlay]() {
               override_creds();
             }
             ovl_dir_reset.isra.0 [overlay]() {
               ovl_test_flag [overlay]();
             }
             ovl_same_sb [overlay]();
             ovl_test_flag [overlay]();
             ovl_path_type [overlay]();
             ovl_iterate_real [overlay]() {
               ovl_layer_lower [overlay]();
               ovl_path_type [overlay]();
               vfs_getattr() {
                 security_inode_getattr() {
                   apparmor_inode_getattr() {
                     common_perm_cond() {
                       common_perm();
                     }
                   }
                 }
                 vfs_getattr_nosec() {
                   ovl_getattr [overlay]() {
                     ovl_same_sb [overlay]();
                     ovl_is_metacopy_dentry [overlay]();
                     ovl_path_real [overlay]() {
                       ovl_path_type [overlay]();
                     }
                     ovl_override_creds [overlay]() {
                       override_creds();
                     }
                     vfs_getattr() {
                       security_inode_getattr() {
                         apparmor_inode_getattr() {
                           common_perm_cond() {
                             common_perm();
                           }
                         }
                       }
                       vfs_getattr_nosec() {
                         ext4_getattr() {
                           generic_fillattr();
                         }
                       }
                     }
                     ovl_path_lower [overlay]();
                     vfs_getattr() {
                       security_inode_getattr() {
                         apparmor_inode_getattr() {
                           common_perm_cond() {
                             common_perm();
                           }
                         }
                       }
                       vfs_getattr_nosec() {
                         ext4_getattr() {
                           generic_fillattr();
                         }
                       }
                     }
                     ovl_test_flag [overlay]();
                     ovl_verify_lower [overlay]() {
                       ovl_index_all [overlay]();
                     }
                     ovl_layer_lower [overlay]();
                     ovl_same_sb [overlay]();
                     revert_creds();
                   }
                 }
               }
               ovl_test_flag [overlay]();
               iterate_dir() {
                 security_file_permission() {
                   apparmor_file_permission() {
                     common_file_perm() {
                       aa_file_perm() {
                         __rcu_read_lock();
                         __rcu_read_unlock();
                       }
                     }
                   }
                   __fsnotify_parent();
                   fsnotify();
                 }
                 down_read_killable();
                 ext4_readdir() {
                   is_dx_dir();
                   ext4_dx_readdir() {
                     kmem_cache_alloc_trace() {
                       should_failslab();
                       memcg_kmem_put_cache();
                     }
                     free_rb_tree_fname();
                     ext4_htree_fill_tree() {
                       htree_dirblock_to_tree() {
                         __ext4_read_dirblock() {
                           __ext4_read_dirblock.part.0() {
                             ext4_bread() {
                               ext4_getblk() {
                                 ext4_map_blocks() {
                                   ext4_es_lookup_extent() {
                                     _raw_read_lock();
                                     _raw_read_unlock();
                                   }
                                   __check_block_validity.constprop.0() {
                                     ext4_inode_block_valid() {
                                       __rcu_read_lock();
                                       __rcu_read_unlock();
                                     }
                                   }
                                 }
                                 __getblk_gfp() {
                                   __find_get_block() {
                                     mark_page_accessed();
                                   }
                                 }
                               }
                             }
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __ext4_check_dir_entry();
                         ext4fs_dirhash() {
                           __ext4fs_dirhash() {
                             str2hashbuf_unsigned();
                           }
                         }
                         ext4_htree_store_dirent() {
                           __kmalloc() {
                             kmalloc_slab();
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                         }
                         __brelse();
                         fscrypt_fname_free_buffer() {
                           kfree();
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                     call_filldir() {
                       ovl_fill_real [overlay]() {
                         filldir64() {
                           verify_dirent_name();
                           __check_object_size() {
                             check_stack_object();
                             pfn_valid() {
                               memblock_is_map_memory();
                             }
                             __check_heap_object();
                           }
                         }
                       }
                     }
                   }
                 }
                 __fsnotify_parent();
                 fsnotify();
                 up_read();
               }
             }
             revert_creds();
           }
           __fsnotify_parent();
           fsnotify();
           touch_atime() {
             atime_needs_update() {
               current_time() {
                 ktime_get_coarse_real_ts64();
                 timestamp_truncate();
               }
             }
           }
           up_write();
         }
         __f_unlock_pos() {
           mutex_unlock();
         }
         fput() {
           fput_many();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_getdents64() {
       ksys_getdents64() {
         __fdget_pos() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
           mutex_lock();
         }
         iterate_dir() {
           security_file_permission() {
             apparmor_file_permission() {
               common_file_perm() {
                 aa_file_perm() {
                   __rcu_read_lock();
                   aa_label_is_subset();
                   __rcu_read_unlock();
                 }
               }
             }
             __fsnotify_parent();
             fsnotify();
           }
           down_write_killable();
           ovl_iterate [overlay]() {
             ovl_override_creds [overlay]() {
               override_creds();
             }
             ovl_same_sb [overlay]();
             ovl_test_flag [overlay]();
             ovl_path_type [overlay]();
             ovl_iterate_real [overlay]() {
               ovl_layer_lower [overlay]();
               ovl_path_type [overlay]();
               vfs_getattr() {
                 security_inode_getattr() {
                   apparmor_inode_getattr() {
                     common_perm_cond() {
                       common_perm();
                     }
                   }
                 }
                 vfs_getattr_nosec() {
                   ovl_getattr [overlay]() {
                     ovl_same_sb [overlay]();
                     ovl_is_metacopy_dentry [overlay]();
                     ovl_path_real [overlay]() {
                       ovl_path_type [overlay]();
                     }
                     ovl_override_creds [overlay]() {
                       override_creds();
                     }
                     vfs_getattr() {
                       security_inode_getattr() {
                         apparmor_inode_getattr() {
                           common_perm_cond() {
                             common_perm();
                           }
                         }
                       }
                       vfs_getattr_nosec() {
                         ext4_getattr() {
                           generic_fillattr();
                         }
                       }
                     }
                     ovl_path_lower [overlay]();
                     vfs_getattr() {
                       security_inode_getattr() {
                         apparmor_inode_getattr() {
                           common_perm_cond() {
                             common_perm();
                           }
                         }
                       }
                       vfs_getattr_nosec() {
                         ext4_getattr() {
                           generic_fillattr();
                         }
                       }
                     }
                     ovl_test_flag [overlay]();
                     ovl_verify_lower [overlay]() {
                       ovl_index_all [overlay]();
                     }
                     ovl_layer_lower [overlay]();
                     ovl_same_sb [overlay]();
                     revert_creds();
                   }
                 }
               }
               ovl_test_flag [overlay]();
               iterate_dir() {
                 security_file_permission() {
                   apparmor_file_permission() {
                     common_file_perm() {
                       aa_file_perm() {
                         __rcu_read_lock();
                         __rcu_read_unlock();
                       }
                     }
                   }
                   __fsnotify_parent();
                   fsnotify();
                 }
                 down_read_killable();
                 ext4_readdir() {
                   is_dx_dir();
                   ext4_dx_readdir();
                 }
                 __fsnotify_parent();
                 fsnotify();
                 up_read();
               }
             }
             revert_creds();
           }
           __fsnotify_parent();
           fsnotify();
           touch_atime() {
             atime_needs_update() {
               current_time() {
                 ktime_get_coarse_real_ts64();
                 timestamp_truncate();
               }
             }
           }
           up_write();
         }
         __f_unlock_pos() {
           mutex_unlock();
         }
         fput() {
           fput_many();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_close() {
       __close_fd() {
         _raw_spin_lock();
         _raw_spin_unlock();
         filp_close() {
           dnotify_flush() {
             fsnotify_find_mark() {
               fsnotify_grab_connector() {
                 __srcu_read_lock();
                 __srcu_read_unlock();
               }
             }
           }
           locks_remove_posix();
           fput() {
             fput_many() {
               task_work_add() {
                 kick_process();
               }
             }
           }
         }
       }
     }
   }
 }
 do_notify_resume() {
   task_work_run() {
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
     ____fput() {
       __fput() {
         __fsnotify_parent();
         fsnotify();
         locks_remove_file();
         ima_file_free();
         ovl_dir_release [overlay]() {
           fput() {
             fput_many() {
               task_work_add() {
                 kick_process();
               }
             }
           }
           kfree();
         }
         module_put();
         put_pid();
         dput() {
           __rcu_read_lock();
           __rcu_read_unlock();
         }
         mntput() {
           mntput_no_expire() {
             __rcu_read_lock();
             __rcu_read_unlock();
           }
         }
         security_file_free() {
           apparmor_file_free_security();
           kmem_cache_free();
         }
         call_rcu() {
           __call_rcu() {
             rcu_segcblist_enqueue();
           }
         }
       }
     }
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
     ____fput() {
       __fput() {
         __fsnotify_parent();
         fsnotify();
         locks_remove_file();
         ima_file_free();
         ext4_release_dir() {
           free_rb_tree_fname() {
             kfree();
             kfree();
             kfree();
             kfree();
             kfree();
           }
           kfree();
         }
         module_put();
         put_pid();
         dput() {
           __rcu_read_lock();
           __rcu_read_unlock();
         }
         mntput() {
           mntput_no_expire() {
             __rcu_read_lock();
             _raw_spin_lock();
             mnt_get_count();
             __rcu_read_unlock();
             _raw_spin_unlock();
           }
         }
         security_file_free() {
           apparmor_file_free_security();
           kmem_cache_free();
         }
         call_rcu() {
           __call_rcu() {
             rcu_segcblist_enqueue();
           }
         }
       }
     }
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
   }
   mem_cgroup_handle_over_high();
   blkcg_maybe_throttle_current();
   mem_cgroup_handle_over_high();
   blkcg_maybe_throttle_current();
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_futex() {
       get_timespec64();
       do_futex() {
         futex_wait() {
           hrtimer_init_sleeper() {
             __hrtimer_init();
           }
           ktime_add_safe();
           futex_wait_setup() {
             get_futex_key() {
               get_futex_key_refs.isra.0();
             }
             hash_futex();
             _raw_spin_lock();
             get_futex_value_locked();
           }
           futex_wait_queue_me() {
             _raw_spin_unlock();
             hrtimer_sleeper_start_expires() {
               hrtimer_start_range_ns() {
                 lock_hrtimer_base() {
                   _raw_spin_lock_irqsave();
                 }
                 get_nohz_timer_target();
                 enqueue_hrtimer();
                 _raw_spin_unlock_irqrestore();
               }
             }
             schedule() {
               rcu_note_context_switch() {
                 rcu_preempt_deferred_qs() {
                   rcu_preempt_need_deferred_qs();
                 }
                 rcu_qs();
               }
               _raw_spin_lock();
               update_rq_clock();
               deactivate_task() {
                 psi_task_change() {
                   record_times.isra.0();
                   record_times.isra.0();
                   record_times.isra.0();
                   record_times.isra.0();
                   record_times.isra.0();
                 }
                 dequeue_task_fair() {
                   dequeue_entity() {
                     update_curr() {
                       update_min_vruntime();
                       cpuacct_charge() {
                         __rcu_read_lock();
                         __rcu_read_unlock();
                       }
                       __rcu_read_lock();
                       __cgroup_account_cputime() {
                         cgroup_base_stat_cputime_account_begin();
                         cgroup_base_stat_cputime_account_end.isra.0() {
                           cgroup_rstat_updated();
                         }
                       }
                       __rcu_read_unlock();
                     }
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                     clear_buddies();
                     update_cfs_group();
                     update_min_vruntime();
                   }
                   set_next_buddy();
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq() {
                     __accumulate_pelt_segments();
                   }
                   update_cfs_group() {
                     reweight_entity() {
                       update_curr() {
                         __calc_delta();
                         update_min_vruntime();
                       }
                     }
                   }
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq() {
                     __accumulate_pelt_segments();
                   }
                   update_cfs_group() {
                     reweight_entity() {
                       update_curr() {
                         __calc_delta();
                         update_min_vruntime();
                       }
                     }
                   }
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq() {
                     __accumulate_pelt_segments();
                   }
                   update_cfs_group() {
                     reweight_entity() {
                       update_curr() {
                         __calc_delta();
                         update_min_vruntime();
                       }
                     }
                   }
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq() {
                     __accumulate_pelt_segments();
                   }
                   dbs_update_util_handler() {
                     cpufreq_this_cpu_can_update();
                     arch_irq_work_raise() {
                       gic_raise_softirq();
                     }
                   }
                   update_cfs_group() {
                     reweight_entity() {
                       update_curr() {
                         __calc_delta();
                         update_min_vruntime();
                       }
                     }
                   }
                   hrtick_update();
                 }
               }
               pick_next_task_fair() {
                 update_curr();
                 check_cfs_rq_runtime();
                 pick_next_entity() {
                   wakeup_preempt_entity.isra.0();
                   clear_buddies();
                 }
                 update_curr();
                 check_cfs_rq_runtime();
                 pick_next_entity() {
                   wakeup_preempt_entity.isra.0();
                   clear_buddies();
                 }
                 update_curr();
                 check_cfs_rq_runtime();
                 pick_next_entity() {
                   wakeup_preempt_entity.isra.0();
                   clear_buddies();
                 }
                 update_curr();
                 check_cfs_rq_runtime();
                 pick_next_entity() {
                   wakeup_preempt_entity.isra.0();
                   clear_buddies();
                 }
                 check_cfs_rq_runtime();
                 pick_next_entity() {
                   clear_buddies();
                 }
                 put_prev_entity() {
                   check_cfs_rq_runtime();
                 }
                 set_next_entity() {
                   __update_load_avg_se() {
                     __accumulate_pelt_segments();
                   }
                   __update_load_avg_cfs_rq();
                 }
               }
               fpsimd_thread_switch() {
                 __get_cpu_fpsimd_context();
                 fpsimd_save() {
                   have_cpu_fpsimd_context();
                 }
                 __put_cpu_fpsimd_context();
               }
               hw_breakpoint_thread_switch();
               uao_thread_switch();
               cpu_have_feature();
               erratum_1418040_thread_switch() {
                 this_cpu_has_cap() {
                   is_affected_midr_range_list();
                 }
               }
