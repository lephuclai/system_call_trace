                         napi_gro_receive() {
                           dev_gro_receive() {
                             __rcu_read_lock();
                             inet_gro_receive() {
                               __rcu_read_lock();
                               tcp4_gro_receive() {
                                 __skb_gro_checksum_complete() {
                                   skb_checksum() {
                                     __skb_checksum();
                                   }
                                 }
                                 tcp_gro_receive();
                               }
                               __rcu_read_unlock();
                             }
                             __rcu_read_unlock();
                           }
                           gro_normal_one();
                         }
                         bcmgenet_rx_refill() {
                           __netdev_alloc_skb() {
                             __local_bh_disable_ip();
                             page_frag_alloc();
                             __local_bh_enable_ip();
                             __build_skb() {
                               kmem_cache_alloc() {
                                 should_failslab();
                                 memcg_kmem_put_cache();
                               }
                               __build_skb_around();
                             }
                           }
                           dma_direct_map_page() {
                             arch_sync_dma_for_device();
                           }
                           dma_direct_unmap_page() {
                             dma_direct_sync_single_for_cpu() {
                               arch_sync_dma_for_cpu();
                             }
                           }
                         }
                         skb_put();
                         skb_pull();
                         skb_trim();
                         eth_type_trans();
                         napi_gro_receive() {
                           dev_gro_receive() {
                             __rcu_read_lock();
                             inet_gro_receive() {
                               __rcu_read_lock();
                               tcp4_gro_receive() {
                                 __skb_gro_checksum_complete() {
                                   skb_checksum() {
                                     __skb_checksum();
                                   }
                                 }
                                 tcp_gro_receive();
                               }
                               __rcu_read_unlock();
                             }
                             __rcu_read_unlock();
                           }
                           gro_normal_one();
                         }
                       } /* bcmgenet_desc_rx */
                       napi_complete_done() {
                         gro_normal_list.part.0() {
                           netif_receive_skb_list_internal() {
                             ktime_get_with_offset() {
                               arch_counter_read();
                             }
                             skb_defer_rx_timestamp() {
                               ptp_classify_raw();
                             }
                             ktime_get_with_offset() {
                               arch_counter_read();
                             }
                             skb_defer_rx_timestamp() {
                               ptp_classify_raw();
                             }
                             ktime_get_with_offset() {
                               arch_counter_read();
                             }
                             skb_defer_rx_timestamp() {
                               ptp_classify_raw();
                             }
                             __rcu_read_lock();
                             __netif_receive_skb_list_core() {
                               __netif_receive_skb_core();
                               __netif_receive_skb_core();
                               __netif_receive_skb_core();
                               ip_list_rcv() {
                                 ip_rcv_core.isra.0();
                                 ip_rcv_core.isra.0();
                                 ip_rcv_core.isra.0();
                                 ip_sublist_rcv() {
                                   __rcu_read_lock();
                                   nf_hook_slow() {
                                     ip_sabotage_in [br_netfilter]();
                                     ipv4_conntrack_defrag [nf_defrag_ipv4]();
                                     ipv4_conntrack_in [nf_conntrack]() {
                                       nf_conntrack_in [nf_conntrack]() {
                                         get_l4proto [nf_conntrack]();
                                         nf_ct_get_tuple [nf_conntrack]();
                                         hash_conntrack_raw [nf_conntrack]();
                                         __nf_conntrack_find_get [nf_conntrack]() {
                                           __rcu_read_lock();
                                           __rcu_read_unlock();
                                         }
                                         nf_conntrack_tcp_packet [nf_conntrack]() {
                                           nf_checksum() {
                                             nf_ip_checksum();
                                           }
                                           _raw_spin_lock_bh() {
                                             __local_bh_disable_ip();
                                           }
                                           tcp_in_window [nf_conntrack]() {
                                             nf_ct_seq_offset [nf_conntrack]();
                                           }
                                           _raw_spin_unlock_bh() {
                                             __local_bh_enable_ip();
                                           }
                                           __nf_ct_refresh_acct [nf_conntrack]();
                                         }
                                       }
                                     }
                                     iptable_mangle_hook [iptable_mangle]() {
                                       ipt_do_table [ip_tables]() {
                                         __local_bh_disable_ip();
                                         __local_bh_enable_ip();
                                       }
                                     }
                                     nf_nat_ipv4_pre_routing [nf_nat]() {
                                       nf_nat_ipv4_fn [nf_nat]() {
                                         nf_nat_inet_fn [nf_nat]() {
                                           nf_nat_packet [nf_nat]();
                                         }
                                       }
                                     }
                                   }
                                   __rcu_read_unlock();
                                   __rcu_read_lock();
                                   nf_hook_slow() {
                                     ip_sabotage_in [br_netfilter]();
                                     ipv4_conntrack_defrag [nf_defrag_ipv4]();
                                     ipv4_conntrack_in [nf_conntrack]() {
                                       nf_conntrack_in [nf_conntrack]() {
                                         get_l4proto [nf_conntrack]();
                                         nf_ct_get_tuple [nf_conntrack]();
                                         hash_conntrack_raw [nf_conntrack]();
                                         __nf_conntrack_find_get [nf_conntrack]() {
                                           __rcu_read_lock();
                                           __rcu_read_unlock();
                                         }
                                         nf_conntrack_tcp_packet [nf_conntrack]() {
                                           nf_checksum() {
                                             nf_ip_checksum();
                                           }
                                           _raw_spin_lock_bh() {
                                             __local_bh_disable_ip();
                                           }
                                           tcp_in_window [nf_conntrack]() {
                                             nf_ct_seq_offset [nf_conntrack]();
                                           }
                                           _raw_spin_unlock_bh() {
                                             __local_bh_enable_ip();
                                           }
                                           __nf_ct_refresh_acct [nf_conntrack]();
                                         }
                                       }
                                     }
                                     iptable_mangle_hook [iptable_mangle]() {
                                       ipt_do_table [ip_tables]() {
                                         __local_bh_disable_ip();
                                         __local_bh_enable_ip();
                                       }
                                     }
                                     nf_nat_ipv4_pre_routing [nf_nat]() {
                                       nf_nat_ipv4_fn [nf_nat]() {
                                         nf_nat_inet_fn [nf_nat]() {
                                           nf_nat_packet [nf_nat]();
                                         }
                                       }
                                     }
                                   }
                                   __rcu_read_unlock();
                                   __rcu_read_lock();
                                   nf_hook_slow() {
                                     ip_sabotage_in [br_netfilter]();
                                     ipv4_conntrack_defrag [nf_defrag_ipv4]();
                                     ipv4_conntrack_in [nf_conntrack]() {
                                       nf_conntrack_in [nf_conntrack]() {
                                         get_l4proto [nf_conntrack]();
                                         nf_ct_get_tuple [nf_conntrack]();
                                         hash_conntrack_raw [nf_conntrack]();
                                         __nf_conntrack_find_get [nf_conntrack]() {
                                           __rcu_read_lock();
                                           __rcu_read_unlock();
                                         }
                                         nf_conntrack_tcp_packet [nf_conntrack]() {
                                           nf_checksum() {
                                             nf_ip_checksum();
                                           }
                                           _raw_spin_lock_bh() {
                                             __local_bh_disable_ip();
                                           }
                                           tcp_in_window [nf_conntrack]() {
                                             nf_ct_seq_offset [nf_conntrack]();
                                           }
                                           _raw_spin_unlock_bh() {
                                             __local_bh_enable_ip();
                                           }
                                           __nf_ct_refresh_acct [nf_conntrack]();
                                         }
                                       }
                                     }
                                     iptable_mangle_hook [iptable_mangle]() {
                                       ipt_do_table [ip_tables]() {
                                         __local_bh_disable_ip();
                                         __local_bh_enable_ip();
                                       }
                                     }
                                     nf_nat_ipv4_pre_routing [nf_nat]() {
                                       nf_nat_ipv4_fn [nf_nat]() {
                                         nf_nat_inet_fn [nf_nat]() {
                                           nf_nat_packet [nf_nat]();
                                         }
                                       }
                                     }
                                   }
                                   __rcu_read_unlock();
                                   ip_rcv_finish_core.isra.0() {
                                     tcp_v4_early_demux() {
                                       __inet_lookup_established() {
                                         inet_ehashfn();
                                       }
                                       ipv4_dst_check();
                                     }
                                   }
                                   ip_rcv_finish_core.isra.0() {
                                     tcp_v4_early_demux() {
                                       __inet_lookup_established() {
                                         inet_ehashfn();
                                       }
                                       ipv4_dst_check();
                                     }
                                   }
                                   ip_rcv_finish_core.isra.0() {
                                     tcp_v4_early_demux() {
                                       __inet_lookup_established() {
                                         inet_ehashfn();
                                       }
                                       ipv4_dst_check();
                                     }
                                   }
                                   ip_sublist_rcv_finish() {
                                     ip_local_deliver() {
                                       __rcu_read_lock();
                                       nf_hook_slow() {
                                         iptable_mangle_hook [iptable_mangle]() {
                                           ipt_do_table [ip_tables]() {
                                             __local_bh_disable_ip();
                                             __local_bh_enable_ip();
                                           }
                                         }
                                         iptable_filter_hook [iptable_filter]() {
                                           ipt_do_table [ip_tables]() {
                                             __local_bh_disable_ip();
                                             conntrack_mt_v3 [xt_conntrack]() {
                                               conntrack_mt [xt_conntrack]();
                                             }
                                             comment_mt [xt_comment]();
                                             conntrack_mt_v3 [xt_conntrack]() {
                                               conntrack_mt [xt_conntrack]();
                                             }
                                             __local_bh_enable_ip();
                                           }
                                         }
                                         nf_nat_ipv4_local_in [nf_nat]() {
                                           nf_nat_ipv4_fn [nf_nat]() {
                                             nf_nat_inet_fn [nf_nat]() {
                                               nf_nat_packet [nf_nat]();
                                             }
                                           }
                                         }
                                         ipv4_confirm [nf_conntrack]() {
                                           nf_confirm [nf_conntrack]() {
                                             nf_ct_deliver_cached_events [nf_conntrack]() {
                                               __rcu_read_lock();
                                               __rcu_read_unlock();
                                             }
                                           }
                                         }
                                       }
                                       __rcu_read_unlock();
                                       ip_local_deliver_finish() {
                                         __rcu_read_lock();
                                         ip_protocol_deliver_rcu() {
                                           raw_local_deliver();
                                           tcp_v4_rcv() {
                                             tcp_v4_inbound_md5_hash() {
                                               tcp_parse_md5sig_option();
                                             }
                                             sk_filter_trim_cap() {
                                               __cgroup_bpf_run_filter_skb() {
                                                 __rcu_read_lock();
                                                 __rcu_read_unlock();
                                               }
                                               security_sock_rcv_skb() {
                                                 apparmor_socket_sock_rcv_skb();
                                               }
                                               __rcu_read_lock();
                                               __rcu_read_unlock();
                                             }
                                             tcp_v4_fill_cb();
                                             _raw_spin_lock();
                                             tcp_v4_do_rcv() {
                                               ipv4_dst_check();
                                               tcp_rcv_established() {
                                                 tcp_mstamp_refresh() {
                                                   ktime_get() {
                                                     arch_counter_read();
                                                   }
                                                 }
                                                 tcp_parse_aligned_timestamp.part.0();
                                                 ktime_get_seconds();
                                                 tcp_ack() {
                                                   tcp_clean_rtx_queue() {
                                                     tcp_rack_advance();
                                                     tcp_rate_skb_delivered();
                                                     __kfree_skb() {
                                                       skb_release_all() {
                                                         skb_release_head_state();
                                                         skb_release_data() {
                                                           skb_free_head() {
                                                             kfree() {
                                                               __slab_free();
                                                             }
                                                           }
                                                         }
                                                       }
                                                       kfree_skbmem() {
                                                         kmem_cache_free() {
                                                           __slab_free();
                                                         }
                                                       }
                                                     }
                                                     tcp_ack_update_rtt.isra.0() {
                                                       __usecs_to_jiffies();
                                                     }
                                                     bictcp_acked();
                                                   }
                                                   tcp_rack_update_reo_wnd();
                                                   tcp_schedule_loss_probe() {
                                                     tcp_schedule_loss_probe.part.0() {
                                                       __usecs_to_jiffies();
                                                       jiffies_to_usecs();
                                                       __usecs_to_jiffies();
                                                       sk_reset_timer() {
                                                         mod_timer();
                                                       }
                                                     }
                                                   }
                                                   tcp_newly_delivered();
                                                   tcp_rate_gen();
                                                   bictcp_cong_avoid();
                                                   tcp_update_pacing_rate();
                                                 }
                                                 __kfree_skb() {
                                                   skb_release_all() {
                                                     skb_release_head_state();
                                                     skb_release_data() {
                                                       skb_free_head() {
                                                         page_frag_free();
                                                       }
                                                     }
                                                   }
                                                   kfree_skbmem() {
                                                     kmem_cache_free() {
                                                       __slab_free();
                                                     }
                                                   }
                                                 }
                                                 tcp_current_mss() {
                                                   ipv4_mtu();
                                                   tcp_established_options();
                                                 }
                                                 __tcp_push_pending_frames() {
                                                   tcp_write_xmit() {
                                                     ktime_get() {
                                                       arch_counter_read();
                                                     }
                                                     tcp_mtu_probe();
                                                     tcp_small_queue_check.isra.0();
                                                     __tcp_transmit_skb() {
                                                       skb_clone() {
                                                         __skb_clone() {
                                                           __copy_skb_header();
                                                         }
                                                       }
                                                       tcp_established_options();
                                                       skb_push();
                                                       tcp_options_write();
                                                       __tcp_select_window();
                                                       tcp_v4_send_check() {
                                                         __tcp_v4_send_check();
                                                       }
                                                       __ip_queue_xmit() {
                                                         __rcu_read_lock();
                                                         __sk_dst_check() {
                                                           ipv4_dst_check();
                                                         }
                                                         skb_push();
                                                         ip_local_out() {
                                                           __ip_local_out() {
                                                             __rcu_read_lock();
                                                             nf_hook_slow() {
                                                               ipv4_conntrack_defrag [nf_defrag_ipv4]();
                                                               ipv4_conntrack_local [nf_conntrack]() {
                                                                 nf_conntrack_in [nf_conntrack]() {
                                                                   get_l4proto [nf_conntrack]();
                                                                   nf_ct_get_tuple [nf_conntrack]();
                                                                   hash_conntrack_raw [nf_conntrack]();
                                                                   __nf_conntrack_find_get [nf_conntrack]() {
                                                                     __rcu_read_lock();
                                                                     __rcu_read_unlock();
                                                                   }
                                                                   nf_conntrack_tcp_packet [nf_conntrack]() {
                                                                     _raw_spin_lock_bh() {
                                                                       __local_bh_disable_ip();
                                                                     }
                                                                     tcp_in_window [nf_conntrack]() {
                                                                       nf_ct_seq_offset [nf_conntrack]();
                                                                     }
                                                                     _raw_spin_unlock_bh() {
                                                                       __local_bh_enable_ip();
                                                                     }
                                                                     __nf_ct_refresh_acct [nf_conntrack]();
                                                                   }
                                                                 }
                                                               }
                                                               iptable_mangle_hook [iptable_mangle]() {
                                                                 ipt_do_table [ip_tables]() {
                                                                   __local_bh_disable_ip();
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                               nf_nat_ipv4_local_fn [nf_nat]() {
                                                                 nf_nat_ipv4_fn [nf_nat]() {
                                                                   nf_nat_inet_fn [nf_nat]() {
                                                                     nf_nat_packet [nf_nat]();
                                                                   }
                                                                 }
                                                               }
                                                               iptable_filter_hook [iptable_filter]() {
                                                                 ipt_do_table [ip_tables]() {
                                                                   __local_bh_disable_ip();
                                                                   conntrack_mt_v3 [xt_conntrack]() {
                                                                     conntrack_mt [xt_conntrack]();
                                                                   }
                                                                   conntrack_mt_v3 [xt_conntrack]() {
                                                                     conntrack_mt [xt_conntrack]();
                                                                   }
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                             }
                                                             __rcu_read_unlock();
                                                           }
                                                           ip_output() {
                                                             __rcu_read_lock();
                                                             nf_hook_slow() {
                                                               iptable_mangle_hook [iptable_mangle]() {
                                                                 ipt_do_table [ip_tables]() {
                                                                   __local_bh_disable_ip();
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                               nf_nat_ipv4_out [nf_nat]() {
                                                                 nf_nat_ipv4_fn [nf_nat]() {
                                                                   nf_nat_inet_fn [nf_nat]() {
                                                                     nf_nat_packet [nf_nat]();
                                                                   }
                                                                 }
                                                               }
                                                               ipv4_confirm [nf_conntrack]() {
                                                                 nf_confirm [nf_conntrack]() {
                                                                   nf_ct_deliver_cached_events [nf_conntrack]() {
                                                                     __rcu_read_lock();
                                                                     __rcu_read_unlock();
                                                                   }
                                                                 }
                                                               }
                                                             }
                                                             __rcu_read_unlock();
                                                             ip_finish_output() {
                                                               __cgroup_bpf_run_filter_skb() {
                                                                 __rcu_read_lock();
                                                                 __rcu_read_unlock();
                                                               }
                                                               __ip_finish_output() {
                                                                 ipv4_mtu();
                                                                 ip_finish_output2() {
                                                                   __local_bh_disable_ip();
                                                                   dev_queue_xmit() {
                                                                     __dev_queue_xmit() {
                                                                       __local_bh_disable_ip();
                                                                       netdev_core_pick_tx() {
                                                                         netdev_pick_tx();
                                                                       }
                                                                       _raw_spin_lock();
                                                                       sch_direct_xmit() {
                                                                         _raw_spin_unlock();
                                                                         validate_xmit_skb_list() {
                                                                           validate_xmit_skb() {
                                                                             netif_skb_features() {
                                                                               skb_network_protocol();
                                                                             }
                                                                             __pskb_pull_tail() {
                                                                               pskb_expand_head() {
                                                                                 __kmalloc_reserve.isra.0() {
                                                                                   __kmalloc_track_caller() {
                                                                                     kmalloc_slab();
                                                                                     should_failslab();
                                                                                     memcg_kmem_put_cache();
                                                                                   }
                                                                                 }
                                                                                 ksize() {
                                                                                   __ksize();
                                                                                 }
                                                                                 skb_release_data();
                                                                                 skb_headers_offset_update();
                                                                               }
                                                                               skb_copy_bits();
                                                                             }
                                                                             skb_csum_hwoffload_help() {
                                                                               skb_checksum_help() {
                                                                                 skb_checksum() {
                                                                                   __skb_checksum();
                                                                                 }
                                                                               }
                                                                             }
                                                                             validate_xmit_xfrm();
                                                                           }
                                                                         }
                                                                         _raw_spin_lock();
                                                                         dev_hard_start_xmit() {
                                                                           bcmgenet_xmit() {
                                                                             _raw_spin_lock();
                                                                             dma_direct_map_page() {
                                                                               arch_sync_dma_for_device();
                                                                             }
                                                                             skb_clone_tx_timestamp() {
                                                                               ptp_classify_raw();
                                                                             }
                                                                             _raw_spin_unlock();
                                                                           }
                                                                         }
                                                                         _raw_spin_unlock();
                                                                         _raw_spin_lock();
                                                                       }
                                                                       __qdisc_run() {
                                                                         dequeue_skb() {
                                                                           fq_codel_dequeue [sch_fq_codel]();
                                                                         }
                                                                       }
                                                                       _raw_spin_unlock();
                                                                       __local_bh_enable_ip();
                                                                     }
                                                                   }
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                             }
                                                           }
                                                         }
                                                         __rcu_read_unlock();
                                                       }
                                                       tcp_update_skb_after_send();
                                                       tcp_rate_skb_sent();
                                                     }
                                                     tcp_event_new_data_sent() {
                                                       tcp_rbtree_insert();
                                                       tcp_rearm_rto() {
                                                         jiffies_to_usecs();
                                                         __usecs_to_jiffies();
                                                         sk_reset_timer() {
                                                           mod_timer() {
                                                             lock_timer_base() {
                                                               _raw_spin_lock_irqsave();
                                                             }
                                                             calc_wheel_index();
                                                             detach_if_pending();
                                                             get_nohz_timer_target();
                                                             _raw_spin_unlock();
                                                             _raw_spin_lock();
                                                             enqueue_timer();
                                                             trigger_dyntick_cpu.isra.0();
                                                             _raw_spin_unlock_irqrestore();
                                                           }
                                                         }
                                                       }
                                                       tcp_check_space();
                                                     }
                                                     tcp_chrono_stop();
                                                     tcp_schedule_loss_probe.part.0() {
                                                       __usecs_to_jiffies();
                                                       jiffies_to_usecs();
                                                       __usecs_to_jiffies();
                                                       sk_reset_timer() {
                                                         mod_timer() {
                                                           lock_timer_base() {
                                                             _raw_spin_lock_irqsave();
                                                           }
                                                           calc_wheel_index();
                                                           detach_if_pending();
                                                           get_nohz_timer_target();
                                                           enqueue_timer();
                                                           trigger_dyntick_cpu.isra.0();
                                                           _raw_spin_unlock_irqrestore();
                                                         }
                                                       }
                                                     }
                                                   }
                                                 }
                                                 tcp_check_space();
                                               }
                                             }
                                             _raw_spin_unlock();
                                           }
                                         }
                                         __rcu_read_unlock();
                                       }
                                     }
                                     ip_local_deliver() {
                                       __rcu_read_lock();
                                       nf_hook_slow() {
                                         iptable_mangle_hook [iptable_mangle]() {
                                           ipt_do_table [ip_tables]() {
                                             __local_bh_disable_ip();
                                             __local_bh_enable_ip();
                                           }
                                         }
                                         iptable_filter_hook [iptable_filter]() {
                                           ipt_do_table [ip_tables]() {
                                             __local_bh_disable_ip();
                                             conntrack_mt_v3 [xt_conntrack]() {
                                               conntrack_mt [xt_conntrack]();
                                             }
                                             comment_mt [xt_comment]();
                                             conntrack_mt_v3 [xt_conntrack]() {
                                               conntrack_mt [xt_conntrack]();
                                             }
                                             __local_bh_enable_ip();
                                           }
                                         }
                                         nf_nat_ipv4_local_in [nf_nat]() {
                                           nf_nat_ipv4_fn [nf_nat]() {
                                             nf_nat_inet_fn [nf_nat]() {
                                               nf_nat_packet [nf_nat]();
                                             }
                                           }
                                         }
                                         ipv4_confirm [nf_conntrack]() {
                                           nf_confirm [nf_conntrack]() {
                                             nf_ct_deliver_cached_events [nf_conntrack]() {
                                               __rcu_read_lock();
                                               __rcu_read_unlock();
                                             }
                                           }
                                         }
                                       }
                                       __rcu_read_unlock();
                                       ip_local_deliver_finish() {
                                         __rcu_read_lock();
                                         ip_protocol_deliver_rcu() {
                                           raw_local_deliver();
                                           tcp_v4_rcv() {
                                             tcp_v4_inbound_md5_hash() {
                                               tcp_parse_md5sig_option();
                                             }
                                             sk_filter_trim_cap() {
                                               __cgroup_bpf_run_filter_skb() {
                                                 __rcu_read_lock();
                                                 __rcu_read_unlock();
                                               }
                                               security_sock_rcv_skb() {
                                                 apparmor_socket_sock_rcv_skb();
                                               }
                                               __rcu_read_lock();
                                               __rcu_read_unlock();
                                             }
                                             tcp_v4_fill_cb();
                                             _raw_spin_lock();
                                             tcp_v4_do_rcv() {
                                               ipv4_dst_check();
                                               tcp_rcv_established() {
                                                 tcp_mstamp_refresh() {
                                                   ktime_get() {
                                                     arch_counter_read();
                                                   }
                                                 }
                                                 tcp_parse_aligned_timestamp.part.0();
                                                 ktime_get_seconds();
                                                 tcp_ack() {
                                                   tcp_clean_rtx_queue() {
                                                     tcp_rack_advance();
                                                     tcp_rate_skb_delivered();
                                                     __kfree_skb() {
                                                       skb_release_all() {
                                                         skb_release_head_state();
                                                         skb_release_data() {
                                                           skb_free_head() {
                                                             kfree() {
                                                               __slab_free();
                                                             }
                                                           }
                                                         }
                                                       }
                                                       kfree_skbmem() {
                                                         kmem_cache_free() {
                                                           __slab_free();
                                                         }
                                                       }
                                                     }
                                                     tcp_ack_update_rtt.isra.0() {
                                                       __usecs_to_jiffies();
                                                     }
                                                     bictcp_acked();
                                                   }
                                                   tcp_rack_update_reo_wnd();
                                                   tcp_schedule_loss_probe() {
                                                     tcp_schedule_loss_probe.part.0() {
                                                       __usecs_to_jiffies();
                                                       jiffies_to_usecs();
                                                       __usecs_to_jiffies();
                                                       sk_reset_timer() {
                                                         mod_timer();
                                                       }
                                                     }
                                                   }
                                                   tcp_newly_delivered();
                                                   tcp_rate_gen();
                                                   bictcp_cong_avoid();
                                                   tcp_update_pacing_rate();
                                                 }
                                                 __kfree_skb() {
                                                   skb_release_all() {
                                                     skb_release_head_state();
                                                     skb_release_data() {
                                                       skb_free_head() {
                                                         page_frag_free();
                                                       }
                                                     }
                                                   }
                                                   kfree_skbmem() {
                                                     kmem_cache_free() {
                                                       __slab_free();
                                                     }
                                                   }
                                                 }
                                                 tcp_current_mss() {
                                                   ipv4_mtu();
                                                   tcp_established_options();
                                                 }
                                                 __tcp_push_pending_frames() {
                                                   tcp_write_xmit() {
                                                     ktime_get() {
                                                       arch_counter_read();
                                                     }
                                                     tcp_mtu_probe();
                                                     tcp_small_queue_check.isra.0();
                                                     __tcp_transmit_skb() {
                                                       skb_clone() {
                                                         __skb_clone() {
                                                           __copy_skb_header();
                                                         }
                                                       }
                                                       tcp_established_options();
                                                       skb_push();
                                                       tcp_options_write();
                                                       __tcp_select_window();
                                                       tcp_v4_send_check() {
                                                         __tcp_v4_send_check();
                                                       }
                                                       __ip_queue_xmit() {
                                                         __rcu_read_lock();
                                                         __sk_dst_check() {
                                                           ipv4_dst_check();
                                                         }
                                                         skb_push();
                                                         ip_local_out() {
                                                           __ip_local_out() {
                                                             __rcu_read_lock();
                                                             nf_hook_slow() {
                                                               ipv4_conntrack_defrag [nf_defrag_ipv4]();
                                                               ipv4_conntrack_local [nf_conntrack]() {
                                                                 nf_conntrack_in [nf_conntrack]() {
                                                                   get_l4proto [nf_conntrack]();
                                                                   nf_ct_get_tuple [nf_conntrack]();
                                                                   hash_conntrack_raw [nf_conntrack]();
                                                                   __nf_conntrack_find_get [nf_conntrack]() {
                                                                     __rcu_read_lock();
                                                                     __rcu_read_unlock();
                                                                   }
                                                                   nf_conntrack_tcp_packet [nf_conntrack]() {
                                                                     _raw_spin_lock_bh() {
                                                                       __local_bh_disable_ip();
                                                                     }
                                                                     tcp_in_window [nf_conntrack]() {
                                                                       nf_ct_seq_offset [nf_conntrack]();
                                                                     }
                                                                     _raw_spin_unlock_bh() {
                                                                       __local_bh_enable_ip();
                                                                     }
                                                                     __nf_ct_refresh_acct [nf_conntrack]();
                                                                   }
                                                                 }
                                                               }
                                                               iptable_mangle_hook [iptable_mangle]() {
                                                                 ipt_do_table [ip_tables]() {
                                                                   __local_bh_disable_ip();
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                               nf_nat_ipv4_local_fn [nf_nat]() {
                                                                 nf_nat_ipv4_fn [nf_nat]() {
                                                                   nf_nat_inet_fn [nf_nat]() {
                                                                     nf_nat_packet [nf_nat]();
                                                                   }
                                                                 }
                                                               }
                                                               iptable_filter_hook [iptable_filter]() {
                                                                 ipt_do_table [ip_tables]() {
                                                                   __local_bh_disable_ip();
                                                                   conntrack_mt_v3 [xt_conntrack]() {
                                                                     conntrack_mt [xt_conntrack]();
                                                                   }
                                                                   conntrack_mt_v3 [xt_conntrack]() {
                                                                     conntrack_mt [xt_conntrack]();
                                                                   }
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                             }
                                                             __rcu_read_unlock();
                                                           }
                                                           ip_output() {
                                                             __rcu_read_lock();
                                                             nf_hook_slow() {
                                                               iptable_mangle_hook [iptable_mangle]() {
                                                                 ipt_do_table [ip_tables]() {
                                                                   __local_bh_disable_ip();
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                               nf_nat_ipv4_out [nf_nat]() {
                                                                 nf_nat_ipv4_fn [nf_nat]() {
                                                                   nf_nat_inet_fn [nf_nat]() {
                                                                     nf_nat_packet [nf_nat]();
                                                                   }
                                                                 }
                                                               }
                                                               ipv4_confirm [nf_conntrack]() {
                                                                 nf_confirm [nf_conntrack]() {
                                                                   nf_ct_deliver_cached_events [nf_conntrack]() {
                                                                     __rcu_read_lock();
                                                                     __rcu_read_unlock();
                                                                   }
                                                                 }
                                                               }
                                                             }
                                                             __rcu_read_unlock();
                                                             ip_finish_output() {
                                                               __cgroup_bpf_run_filter_skb() {
                                                                 __rcu_read_lock();
                                                                 __rcu_read_unlock();
                                                               }
                                                               __ip_finish_output() {
                                                                 ipv4_mtu();
                                                                 ip_finish_output2() {
                                                                   __local_bh_disable_ip();
                                                                   dev_queue_xmit() {
                                                                     __dev_queue_xmit() {
                                                                       __local_bh_disable_ip();
                                                                       netdev_core_pick_tx() {
                                                                         netdev_pick_tx();
                                                                       }
                                                                       _raw_spin_lock();
                                                                       sch_direct_xmit() {
                                                                         _raw_spin_unlock();
                                                                         validate_xmit_skb_list() {
                                                                           validate_xmit_skb() {
                                                                             netif_skb_features() {
                                                                               skb_network_protocol();
                                                                             }
                                                                             __pskb_pull_tail() {
                                                                               pskb_expand_head() {
                                                                                 __kmalloc_reserve.isra.0() {
                                                                                   __kmalloc_track_caller() {
                                                                                     kmalloc_slab();
                                                                                     should_failslab();
                                                                                     memcg_kmem_put_cache();
                                                                                   }
                                                                                 }
                                                                                 ksize() {
                                                                                   __ksize();
                                                                                 }
                                                                                 skb_release_data();
                                                                                 skb_headers_offset_update();
                                                                               }
                                                                               skb_copy_bits();
                                                                             }
                                                                             skb_csum_hwoffload_help() {
                                                                               skb_checksum_help() {
                                                                                 skb_checksum() {
                                                                                   __skb_checksum();
                                                                                 }
                                                                               }
                                                                             }
                                                                             validate_xmit_xfrm();
                                                                           }
                                                                         }
                                                                         _raw_spin_lock();
                                                                         dev_hard_start_xmit() {
                                                                           bcmgenet_xmit() {
                                                                             _raw_spin_lock();
                                                                             dma_direct_map_page() {
                                                                               arch_sync_dma_for_device();
                                                                             }
                                                                             skb_clone_tx_timestamp() {
                                                                               ptp_classify_raw();
                                                                             }
                                                                             _raw_spin_unlock();
                                                                           }
                                                                         }
                                                                         _raw_spin_unlock();
                                                                         _raw_spin_lock();
                                                                       }
                                                                       __qdisc_run() {
                                                                         dequeue_skb() {
                                                                           fq_codel_dequeue [sch_fq_codel]();
                                                                         }
                                                                       }
                                                                       _raw_spin_unlock();
                                                                       __local_bh_enable_ip();
                                                                     }
                                                                   }
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                             }
                                                           }
                                                         }
                                                         __rcu_read_unlock();
                                                       }
                                                       tcp_update_skb_after_send();
                                                       tcp_rate_skb_sent();
                                                     }
                                                     tcp_event_new_data_sent() {
                                                       tcp_rbtree_insert();
                                                       tcp_rearm_rto() {
                                                         jiffies_to_usecs();
                                                         __usecs_to_jiffies();
                                                         sk_reset_timer() {
                                                           mod_timer() {
                                                             lock_timer_base() {
                                                               _raw_spin_lock_irqsave();
                                                             }
                                                             calc_wheel_index();
                                                             detach_if_pending();
                                                             get_nohz_timer_target();
                                                             enqueue_timer();
                                                             trigger_dyntick_cpu.isra.0();
                                                             _raw_spin_unlock_irqrestore();
                                                           }
                                                         }
                                                       }
                                                       tcp_check_space();
                                                     }
                                                     tcp_chrono_stop();
                                                     tcp_schedule_loss_probe.part.0() {
                                                       __usecs_to_jiffies();
                                                       jiffies_to_usecs();
                                                       __usecs_to_jiffies();
                                                       sk_reset_timer() {
                                                         mod_timer() {
                                                           lock_timer_base() {
                                                             _raw_spin_lock_irqsave();
                                                           }
                                                           calc_wheel_index();
                                                           detach_if_pending();
                                                           get_nohz_timer_target();
                                                           enqueue_timer();
                                                           trigger_dyntick_cpu.isra.0();
                                                           _raw_spin_unlock_irqrestore() {
                                                           }
                                                         }
                                                       }
                                                     }
                                                   }
                                                 }
                                                 tcp_check_space();
                                               }
                                             }
                                             _raw_spin_unlock();
                                           }
                                         }
                                         __rcu_read_unlock();
                                       }
                                     }
                                     ip_local_deliver() {
                                       __rcu_read_lock();
                                       nf_hook_slow() {
                                         iptable_mangle_hook [iptable_mangle]() {
                                           ipt_do_table [ip_tables]() {
                                             __local_bh_disable_ip();
                                             __local_bh_enable_ip();
                                           }
                                         }
                                         iptable_filter_hook [iptable_filter]() {
                                           ipt_do_table [ip_tables]() {
                                             __local_bh_disable_ip();
                                             conntrack_mt_v3 [xt_conntrack]() {
                                               conntrack_mt [xt_conntrack]();
                                             }
                                             comment_mt [xt_comment]();
                                             conntrack_mt_v3 [xt_conntrack]() {
                                               conntrack_mt [xt_conntrack]();
                                             }
                                             __local_bh_enable_ip();
                                           }
                                         }
                                         nf_nat_ipv4_local_in [nf_nat]() {
                                           nf_nat_ipv4_fn [nf_nat]() {
                                             nf_nat_inet_fn [nf_nat]() {
                                               nf_nat_packet [nf_nat]();
                                             }
                                           }
                                         }
                                         ipv4_confirm [nf_conntrack]() {
                                           nf_confirm [nf_conntrack]() {
                                             nf_ct_deliver_cached_events [nf_conntrack]() {
                                               __rcu_read_lock();
                                               __rcu_read_unlock();
                                             }
                                           }
                                         }
                                       }
                                       __rcu_read_unlock();
                                       ip_local_deliver_finish() {
                                         __rcu_read_lock();
                                         ip_protocol_deliver_rcu() {
                                           raw_local_deliver();
                                           tcp_v4_rcv() {
                                             tcp_v4_inbound_md5_hash() {
                                               tcp_parse_md5sig_option();
                                             }
                                             sk_filter_trim_cap() {
                                               __cgroup_bpf_run_filter_skb() {
                                                 __rcu_read_lock();
                                                 __rcu_read_unlock();
                                               }
                                               security_sock_rcv_skb() {
                                                 apparmor_socket_sock_rcv_skb();
                                               }
                                               __rcu_read_lock();
                                               __rcu_read_unlock();
                                             }
                                             tcp_v4_fill_cb();
                                             _raw_spin_lock();
                                             tcp_v4_do_rcv() {
                                               ipv4_dst_check();
                                               tcp_rcv_established() {
                                                 tcp_mstamp_refresh() {
                                                   ktime_get() {
                                                     arch_counter_read();
                                                   }
                                                 }
                                                 tcp_parse_aligned_timestamp.part.0();
                                                 ktime_get_seconds();
                                                 tcp_ack() {
                                                   tcp_clean_rtx_queue() {
                                                     tcp_rack_advance();
                                                     tcp_rate_skb_delivered();
                                                     __kfree_skb() {
                                                       skb_release_all() {
                                                         skb_release_head_state();
                                                         skb_release_data() {
                                                           skb_free_head() {
                                                             kfree() {
                                                               __slab_free();
                                                             }
                                                           }
                                                         }
                                                       }
                                                       kfree_skbmem() {
                                                         kmem_cache_free() {
                                                           __slab_free();
                                                         }
                                                       }
                                                     }
                                                     tcp_ack_update_rtt.isra.0() {
                                                       __usecs_to_jiffies();
                                                     }
                                                     bictcp_acked();
                                                   }
                                                   tcp_rack_update_reo_wnd();
                                                   tcp_schedule_loss_probe() {
                                                     tcp_schedule_loss_probe.part.0() {
                                                       __usecs_to_jiffies();
                                                       jiffies_to_usecs();
                                                       __usecs_to_jiffies();
                                                       sk_reset_timer() {
                                                         mod_timer() {
                                                           lock_timer_base() {
                                                             _raw_spin_lock_irqsave();
                                                           }
                                                           calc_wheel_index();
                                                           detach_if_pending();
                                                           get_nohz_timer_target();
                                                           enqueue_timer();
                                                           trigger_dyntick_cpu.isra.0();
                                                           _raw_spin_unlock_irqrestore();
                                                         }
                                                       }
                                                     }
                                                   }
                                                   tcp_newly_delivered();
                                                   tcp_rate_gen();
                                                   bictcp_cong_avoid();
                                                   tcp_update_pacing_rate();
                                                 }
                                                 __kfree_skb() {
                                                   skb_release_all() {
                                                     skb_release_head_state();
                                                     skb_release_data() {
                                                       skb_free_head() {
                                                         page_frag_free();
                                                       }
                                                     }
                                                   }
                                                   kfree_skbmem() {
                                                     kmem_cache_free() {
                                                       __slab_free();
                                                     }
                                                   }
                                                 }
                                                 tcp_current_mss() {
                                                   ipv4_mtu();
                                                   tcp_established_options();
                                                 }
                                                 __tcp_push_pending_frames() {
                                                   tcp_write_xmit() {
                                                     ktime_get() {
                                                       arch_counter_read();
                                                     }
                                                     tcp_mtu_probe();
                                                     tcp_small_queue_check.isra.0();
                                                     __tcp_transmit_skb() {
                                                       skb_clone() {
                                                         __skb_clone() {
                                                           __copy_skb_header();
                                                         }
                                                       }
                                                       tcp_established_options();
                                                       skb_push();
                                                       tcp_options_write();
                                                       __tcp_select_window();
                                                       tcp_v4_send_check() {
                                                         __tcp_v4_send_check();
                                                       }
                                                       __ip_queue_xmit() {
                                                         __rcu_read_lock();
                                                         __sk_dst_check() {
                                                           ipv4_dst_check();
                                                         }
                                                         skb_push();
                                                         ip_local_out() {
                                                           __ip_local_out() {
                                                             __rcu_read_lock();
                                                             nf_hook_slow() {
                                                               ipv4_conntrack_defrag [nf_defrag_ipv4]();
                                                               ipv4_conntrack_local [nf_conntrack]() {
                                                                 nf_conntrack_in [nf_conntrack]() {
                                                                   get_l4proto [nf_conntrack]();
                                                                   nf_ct_get_tuple [nf_conntrack]();
                                                                   hash_conntrack_raw [nf_conntrack]();
                                                                   __nf_conntrack_find_get [nf_conntrack]() {
                                                                     __rcu_read_lock();
                                                                     __rcu_read_unlock();
                                                                   }
                                                                   nf_conntrack_tcp_packet [nf_conntrack]() {
                                                                     _raw_spin_lock_bh() {
                                                                       __local_bh_disable_ip();
                                                                     }
                                                                     tcp_in_window [nf_conntrack]() {
                                                                       nf_ct_seq_offset [nf_conntrack]();
                                                                     }
                                                                     _raw_spin_unlock_bh() {
                                                                       __local_bh_enable_ip();
                                                                     }
                                                                     __nf_ct_refresh_acct [nf_conntrack]();
                                                                   }
                                                                 }
                                                               }
                                                               iptable_mangle_hook [iptable_mangle]() {
                                                                 ipt_do_table [ip_tables]() {
                                                                   __local_bh_disable_ip();
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                               nf_nat_ipv4_local_fn [nf_nat]() {
                                                                 nf_nat_ipv4_fn [nf_nat]() {
                                                                   nf_nat_inet_fn [nf_nat]() {
                                                                     nf_nat_packet [nf_nat]();
                                                                   }
                                                                 }
                                                               }
                                                               iptable_filter_hook [iptable_filter]() {
                                                                 ipt_do_table [ip_tables]() {
                                                                   __local_bh_disable_ip();
                                                                   conntrack_mt_v3 [xt_conntrack]() {
                                                                     conntrack_mt [xt_conntrack]();
                                                                   }
                                                                   conntrack_mt_v3 [xt_conntrack]() {
                                                                     conntrack_mt [xt_conntrack]();
                                                                   }
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                             }
                                                             __rcu_read_unlock();
                                                           }
                                                           ip_output() {
                                                             __rcu_read_lock();
                                                             nf_hook_slow() {
                                                               iptable_mangle_hook [iptable_mangle]() {
                                                                 ipt_do_table [ip_tables]() {
                                                                   __local_bh_disable_ip();
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                               nf_nat_ipv4_out [nf_nat]() {
                                                                 nf_nat_ipv4_fn [nf_nat]() {
                                                                   nf_nat_inet_fn [nf_nat]() {
                                                                     nf_nat_packet [nf_nat]();
                                                                   }
                                                                 }
                                                               }
                                                               ipv4_confirm [nf_conntrack]() {
                                                                 nf_confirm [nf_conntrack]() {
                                                                   nf_ct_deliver_cached_events [nf_conntrack]() {
                                                                     __rcu_read_lock();
                                                                     __rcu_read_unlock();
                                                                   }
                                                                 }
                                                               }
                                                             }
                                                             __rcu_read_unlock();
                                                             ip_finish_output() {
                                                               __cgroup_bpf_run_filter_skb() {
                                                                 __rcu_read_lock();
                                                                 __rcu_read_unlock();
                                                               }
                                                               __ip_finish_output() {
                                                                 ipv4_mtu();
                                                                 ip_finish_output2() {
                                                                   __local_bh_disable_ip();
                                                                   dev_queue_xmit() {
                                                                     __dev_queue_xmit() {
                                                                       __local_bh_disable_ip();
                                                                       netdev_core_pick_tx() {
                                                                         netdev_pick_tx();
                                                                       }
                                                                       _raw_spin_lock();
                                                                       sch_direct_xmit() {
                                                                         _raw_spin_unlock();
                                                                         validate_xmit_skb_list() {
                                                                           validate_xmit_skb() {
                                                                             netif_skb_features() {
                                                                               skb_network_protocol();
                                                                             }
                                                                             __pskb_pull_tail() {
                                                                               pskb_expand_head() {
                                                                                 __kmalloc_reserve.isra.0() {
                                                                                   __kmalloc_track_caller() {
                                                                                     kmalloc_slab();
                                                                                     should_failslab();
                                                                                     memcg_kmem_put_cache();
                                                                                   }
                                                                                 }
                                                                                 ksize() {
                                                                                   __ksize();
                                                                                 }
                                                                                 skb_release_data();
                                                                                 skb_headers_offset_update();
                                                                               }
                                                                               skb_copy_bits();
                                                                             }
                                                                             skb_csum_hwoffload_help() {
                                                                               skb_checksum_help() {
                                                                                 skb_checksum() {
                                                                                   __skb_checksum();
                                                                                 }
                                                                               }
                                                                             }
                                                                             validate_xmit_xfrm();
                                                                           }
                                                                         }
                                                                         _raw_spin_lock();
                                                                         dev_hard_start_xmit() {
                                                                           bcmgenet_xmit() {
                                                                             _raw_spin_lock();
                                                                             dma_direct_map_page() {
                                                                               arch_sync_dma_for_device();
                                                                             }
                                                                             skb_clone_tx_timestamp() {
                                                                               ptp_classify_raw();
                                                                             }
                                                                             _raw_spin_unlock();
                                                                           }
                                                                         }
                                                                         _raw_spin_unlock();
                                                                         _raw_spin_lock();
                                                                       }
                                                                       __qdisc_run() {
                                                                         dequeue_skb() {
                                                                           fq_codel_dequeue [sch_fq_codel]();
                                                                         }
                                                                       }
                                                                       _raw_spin_unlock();
                                                                       __local_bh_enable_ip();
                                                                     }
                                                                   }
                                                                   __local_bh_enable_ip();
                                                                 }
                                                               }
                                                             }
                                                           }
                                                         }
                                                         __rcu_read_unlock();
                                                       }
                                                       tcp_update_skb_after_send();
                                                       tcp_rate_skb_sent();
                                                     }
                                                     tcp_event_new_data_sent() {
                                                       tcp_rbtree_insert();
                                                       tcp_rearm_rto() {
                                                         jiffies_to_usecs();
                                                         __usecs_to_jiffies();
                                                         sk_reset_timer() {
                                                           mod_timer() {
                                                             lock_timer_base() {
                                                               _raw_spin_lock_irqsave();
                                                             }
                                                             calc_wheel_index();
                                                             detach_if_pending();
                                                             get_nohz_timer_target();
                                                             enqueue_timer();
                                                             trigger_dyntick_cpu.isra.0();
                                                             _raw_spin_unlock_irqrestore();
                                                           }
                                                         }
                                                       }
                                                       tcp_check_space();
                                                     }
                                                     tcp_chrono_stop();
                                                     tcp_schedule_loss_probe.part.0() {
                                                       __usecs_to_jiffies();
                                                       jiffies_to_usecs();
                                                       __usecs_to_jiffies();
                                                       sk_reset_timer() {
                                                         mod_timer() {
                                                           lock_timer_base() {
                                                             _raw_spin_lock_irqsave();
                                                           }
                                                           calc_wheel_index();
                                                           detach_if_pending();
                                                           get_nohz_timer_target();
                                                           enqueue_timer();
                                                           trigger_dyntick_cpu.isra.0();
                                                           _raw_spin_unlock_irqrestore();
                                                         }
                                                       }
                                                     }
                                                   }
                                                 }
                                                 tcp_check_space();
                                               }
                                             }
                                             _raw_spin_unlock();
                                           }
                                         }
                                         __rcu_read_unlock();
                                       }
                                     }
                                   }
                                 }
                               }
                             }
                             __rcu_read_unlock();
                           }
                         }
                       }
                     } /* bcmgenet_rx_poll */
                     bcmgenet_tx_poll() {
                       _raw_spin_lock();
                       __bcmgenet_tx_reclaim() {
                         bcmgenet_free_tx_cb() {
                           dma_direct_unmap_page() {
                             dma_direct_sync_single_for_cpu() {
                               arch_sync_dma_for_cpu();
                             }
                           }
                         }
                         __dev_kfree_skb_any() {
                           consume_skb() {
                             skb_release_all() {
                               skb_release_head_state() {
                                 tcp_wfree() {
                                   sk_free();
                                 }
                               }
                               skb_release_data() {
                                 skb_free_head() {
                                   kfree() {
                                     __slab_free() {
                                       put_cpu_partial();
                                     }
                                   }
                                 }
                               }
                             }
                             kfree_skbmem();
                           }
                         }
                         bcmgenet_free_tx_cb() {
                           dma_direct_unmap_page() {
                             dma_direct_sync_single_for_cpu() {
                               arch_sync_dma_for_cpu();
                             }
                           }
                         }
                         __dev_kfree_skb_any() {
                           consume_skb() {
                             skb_release_all() {
                               skb_release_head_state() {
                                 tcp_wfree() {
                                   sk_free();
                                 }
                               }
                               skb_release_data() {
                                 skb_free_head() {
                                   kfree() {
                                     __slab_free();
                                   }
                                 }
                               }
                             }
                             kfree_skbmem();
                           }
                         }
                         bcmgenet_free_tx_cb() {
                           dma_direct_unmap_page() {
                             dma_direct_sync_single_for_cpu() {
                               arch_sync_dma_for_cpu();
                             }
                           }
                         }
                         __dev_kfree_skb_any() {
                           consume_skb() {
                             skb_release_all() {
                               skb_release_head_state() {
                                 tcp_wfree() {
                                   sk_free();
                                 }
                               }
                               skb_release_data() {
                                 skb_free_head() {
                                   kfree();
                                 }
                               }
                             }
                             kfree_skbmem();
                           }
                         }
                         bcmgenet_free_tx_cb() {
                           dma_direct_unmap_page() {
                             dma_direct_sync_single_for_cpu() {
                               arch_sync_dma_for_cpu();
                             }
                           }
                         }
                         __dev_kfree_skb_any() {
                           consume_skb() {
                             skb_release_all() {
                               skb_release_head_state() {
                                 tcp_wfree() {
                                   sk_free();
                                 }
                               }
                               skb_release_data() {
                                 skb_free_head() {
                                   kfree();
                                 }
                               }
                             }
                             kfree_skbmem();
                           }
                         }
                         bcmgenet_free_tx_cb() {
                           dma_direct_unmap_page() {
                             dma_direct_sync_single_for_cpu() {
                               arch_sync_dma_for_cpu();
                             }
                           }
                         }
                         __dev_kfree_skb_any() {
                           consume_skb() {
                             skb_release_all() {
                               skb_release_head_state() {
                                 tcp_wfree() {
                                   sk_free();
                                 }
                               }
                               skb_release_data() {
                                 skb_free_head() {
                                   kfree();
                                 }
                               }
                             }
                             kfree_skbmem();
                           }
                         }
                       }
                       netif_tx_wake_queue();
                       _raw_spin_unlock();
                     }
                     __raise_softirq_irqoff();
                     net_rps_action_and_irq_enable.isra.0();
                     __kfree_skb_flush();
                   } /* net_rx_action */
                   tasklet_action() {
                     tasklet_action_common.isra.0() {
                       tcp_tasklet_func() {
                         tcp_tsq_handler() {
                           _raw_spin_lock();
                           tcp_tsq_write.part.0() {
                             tcp_current_mss() {
                               ipv4_mtu();
                               tcp_established_options();
                             }
                             tcp_write_xmit() {
                               ktime_get() {
                                 arch_counter_read();
                               }
                               tcp_mtu_probe();
                               tcp_small_queue_check.isra.0();
                               __tcp_transmit_skb() {
                                 skb_clone() {
                                   __skb_clone() {
                                     __copy_skb_header();
                                   }
                                 }
                                 tcp_established_options();
                                 skb_push();
                                 tcp_options_write();
                                 __tcp_select_window();
                                 tcp_v4_send_check() {
                                   __tcp_v4_send_check();
                                 }
                                 __ip_queue_xmit() {
                                   __rcu_read_lock();
                                   __sk_dst_check() {
                                     ipv4_dst_check();
                                   }
                                   skb_push();
                                   ip_local_out() {
                                     __ip_local_out() {
                                       __rcu_read_lock();
                                       nf_hook_slow() {
                                         ipv4_conntrack_defrag [nf_defrag_ipv4]();
                                         ipv4_conntrack_local [nf_conntrack]() {
                                           nf_conntrack_in [nf_conntrack]() {
                                             get_l4proto [nf_conntrack]();
                                             nf_ct_get_tuple [nf_conntrack]();
                                             hash_conntrack_raw [nf_conntrack]();
                                             __nf_conntrack_find_get [nf_conntrack]() {
                                               __rcu_read_lock();
                                               __rcu_read_unlock();
                                             }
                                             nf_conntrack_tcp_packet [nf_conntrack]() {
                                               _raw_spin_lock_bh() {
                                                 __local_bh_disable_ip();
                                               }
                                               tcp_in_window [nf_conntrack]() {
                                                 nf_ct_seq_offset [nf_conntrack]();
                                               }
                                               _raw_spin_unlock_bh() {
                                                 __local_bh_enable_ip();
                                               }
                                               __nf_ct_refresh_acct [nf_conntrack]();
                                             }
                                           }
                                         }
                                         iptable_mangle_hook [iptable_mangle]() {
                                           ipt_do_table [ip_tables]() {
                                             __local_bh_disable_ip();
                                             __local_bh_enable_ip();
                                           }
                                         }
                                         nf_nat_ipv4_local_fn [nf_nat]() {
                                           nf_nat_ipv4_fn [nf_nat]() {
                                             nf_nat_inet_fn [nf_nat]() {
                                               nf_nat_packet [nf_nat]();
                                             }
                                           }
                                         }
                                         iptable_filter_hook [iptable_filter]() {
                                           ipt_do_table [ip_tables]() {
                                             __local_bh_disable_ip();
                                             conntrack_mt_v3 [xt_conntrack]() {
                                               conntrack_mt [xt_conntrack]();
                                             }
                                             conntrack_mt_v3 [xt_conntrack]() {
                                               conntrack_mt [xt_conntrack]();
                                             }
                                             __local_bh_enable_ip();
                                           }
                                         }
                                       }
                                       __rcu_read_unlock();
                                     }
                                     ip_output() {
                                       __rcu_read_lock();
                                       nf_hook_slow() {
                                         iptable_mangle_hook [iptable_mangle]() {
                                           ipt_do_table [ip_tables]() {
                                             __local_bh_disable_ip();
                                             __local_bh_enable_ip();
                                           }
                                         }
                                         nf_nat_ipv4_out [nf_nat]() {
                                           nf_nat_ipv4_fn [nf_nat]() {
                                             nf_nat_inet_fn [nf_nat]() {
                                               nf_nat_packet [nf_nat]();
                                             }
                                           }
                                         }
                                         ipv4_confirm [nf_conntrack]() {
                                           nf_confirm [nf_conntrack]() {
                                             nf_ct_deliver_cached_events [nf_conntrack]() {
                                               __rcu_read_lock();
                                               __rcu_read_unlock();
                                             }
                                           }
                                         }
                                       }
                                       __rcu_read_unlock();
                                       ip_finish_output() {
                                         __cgroup_bpf_run_filter_skb() {
                                           __rcu_read_lock();
                                           __rcu_read_unlock();
                                         }
                                         __ip_finish_output() {
                                           ipv4_mtu();
                                           ip_finish_output2() {
                                             __local_bh_disable_ip();
                                             dev_queue_xmit() {
                                               __dev_queue_xmit() {
                                                 __local_bh_disable_ip();
                                                 netdev_core_pick_tx() {
                                                   netdev_pick_tx();
                                                 }
                                                 _raw_spin_lock();
                                                 sch_direct_xmit() {
                                                   _raw_spin_unlock();
                                                   validate_xmit_skb_list() {
                                                     validate_xmit_skb() {
                                                       netif_skb_features() {
                                                         skb_network_protocol();
                                                       }
                                                       __pskb_pull_tail() {
                                                         pskb_expand_head() {
                                                           __kmalloc_reserve.isra.0() {
                                                             __kmalloc_track_caller() {
                                                               kmalloc_slab();
                                                               should_failslab();
                                                               memcg_kmem_put_cache();
                                                             }
                                                           }
                                                           ksize() {
                                                             __ksize();
                                                           }
                                                           skb_release_data();
                                                           skb_headers_offset_update();
                                                         }
                                                         skb_copy_bits();
                                                       }
                                                       skb_csum_hwoffload_help() {
                                                         skb_checksum_help() {
                                                           skb_checksum() {
                                                             __skb_checksum();
                                                           }
                                                         }
                                                       }
                                                       validate_xmit_xfrm();
                                                     }
                                                   }
                                                   _raw_spin_lock();
                                                   dev_hard_start_xmit() {
                                                     bcmgenet_xmit() {
                                                       _raw_spin_lock();
                                                       dma_direct_map_page() {
                                                         arch_sync_dma_for_device();
                                                       }
                                                       skb_clone_tx_timestamp() {
                                                         ptp_classify_raw();
                                                       }
                                                       _raw_spin_unlock();
                                                     }
                                                   }
                                                   _raw_spin_unlock();
                                                   _raw_spin_lock();
                                                 }
                                                 __qdisc_run() {
                                                   dequeue_skb() {
                                                     fq_codel_dequeue [sch_fq_codel]();
                                                   }
                                                 }
                                                 _raw_spin_unlock();
                                                 __local_bh_enable_ip();
                                               }
                                             }
                                             __local_bh_enable_ip();
                                           }
                                         }
                                       }
                                     }
                                   }
                                   __rcu_read_unlock();
                                 }
                                 tcp_update_skb_after_send();
                                 tcp_rate_skb_sent();
                               }
                               tcp_event_new_data_sent() {
                                 tcp_rbtree_insert();
                                 tcp_rearm_rto() {
                                   jiffies_to_usecs();
                                   __usecs_to_jiffies();
                                   sk_reset_timer() {
                                     mod_timer() {
                                       lock_timer_base() {
                                         _raw_spin_lock_irqsave();
                                       }
                                       calc_wheel_index();
                                       detach_if_pending();
                                       get_nohz_timer_target();
                                       enqueue_timer();
                                       trigger_dyntick_cpu.isra.0();
                                       _raw_spin_unlock_irqrestore();
                                     }
                                   }
                                 }
                                 tcp_check_space();
                               }
                               tcp_chrono_stop();
                               tcp_schedule_loss_probe.part.0() {
                                 __usecs_to_jiffies();
                                 jiffies_to_usecs();
                                 __usecs_to_jiffies();
                                 sk_reset_timer() {
                                   mod_timer() {
                                     lock_timer_base() {
                                       _raw_spin_lock_irqsave();
                                     }
                                     calc_wheel_index();
                                     detach_if_pending();
                                     get_nohz_timer_target();
                                     enqueue_timer();
                                     trigger_dyntick_cpu.isra.0();
                                     _raw_spin_unlock_irqrestore();
                                   }
                                 }
                               }
                             }
                           }
                           _raw_spin_unlock();
                         }
                         sk_free();
                       }
                     }
                   }
                   wakeup_softirqd() {
                     wake_up_process() {
                       try_to_wake_up() {
                         _raw_spin_lock_irqsave();
                         _raw_spin_lock();
                         update_rq_clock();
                         ttwu_do_activate() {
                           activate_task() {
                             psi_task_change() {
                               record_times.isra.0();
                             }
                             enqueue_task_fair() {
                               enqueue_entity() {
                                 update_curr() {
                                   __calc_delta();
                                   update_min_vruntime();
                                 }
                                 __update_load_avg_se() {
                                   __accumulate_pelt_segments();
                                 }
                                 __update_load_avg_cfs_rq() {
                                   __accumulate_pelt_segments();
                                 }
                                 dbs_update_util_handler() {
                                   cpufreq_this_cpu_can_update();
                                 }
                                 update_cfs_group();
                                 place_entity();
                                 __enqueue_entity();
                               }
                               hrtick_update();
                             }
                           }
                           ttwu_do_wakeup() {
                             check_preempt_curr() {
                               check_preempt_wakeup() {
                                 update_curr();
                                 wakeup_preempt_entity.isra.0();
                                 set_next_buddy();
                                 resched_curr();
                               }
                             }
                           }
                         }
                         _raw_spin_unlock();
                         _raw_spin_unlock_irqrestore();
                       }
                     }
                   }
                 } /* __do_softirq */
                 idle_cpu();
                 rcu_irq_exit();
               } /* __handle_domain_irq */
             } /* gic_handle_irq */
             arm64_preempt_schedule_irq() {
               preempt_schedule_irq() {
                 rcu_note_context_switch() {
                   rcu_preempt_deferred_qs() {
                     rcu_preempt_need_deferred_qs();
                   }
                   rcu_qs();
                 }
                 _raw_spin_lock();
                 update_rq_clock();
                 pick_next_task_fair() {
                   update_curr();
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     wakeup_preempt_entity.isra.0();
                     clear_buddies();
                   }
                   put_prev_entity() {
                     update_curr() {
                       update_min_vruntime();
                       cpuacct_charge() {
                         __rcu_read_lock();
                         __rcu_read_unlock();
                       }
                       __rcu_read_lock();
                       __cgroup_account_cputime() {
                         cgroup_base_stat_cputime_account_begin();
                         cgroup_base_stat_cputime_account_end.isra.0() {
                           cgroup_rstat_updated();
                         }
                       }
                       __rcu_read_unlock();
                     }
                     check_cfs_rq_runtime();
                     __enqueue_entity();
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                   }
                   put_prev_entity() {
                     update_curr() {
                       __calc_delta();
                       update_min_vruntime();
                     }
                     check_cfs_rq_runtime();
                     __enqueue_entity();
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                   }
                   put_prev_entity() {
                     update_curr() {
                       __calc_delta();
                       update_min_vruntime();
                     }
                     check_cfs_rq_runtime();
                     __enqueue_entity();
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                   }
                   put_prev_entity() {
                     update_curr() {
                       __calc_delta();
                       update_min_vruntime();
                     }
                     check_cfs_rq_runtime();
                     __enqueue_entity();
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                   }
                   put_prev_entity() {
                     update_curr();
                     check_cfs_rq_runtime();
                     __enqueue_entity();
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq();
                   }
                   set_next_entity() {
                     __update_load_avg_se();
                     __update_load_avg_cfs_rq();
                   }
                 }
                 finish_task_switch() {
                   _raw_spin_unlock_irq();
                 }
               } /* preempt_schedule_irq */
             } /* arm64_preempt_schedule_irq */
             remove_wait_queue() {
               _raw_spin_lock_irqsave();
               _raw_spin_unlock_irqrestore();
             }
             fput() {
               fput_many();
             }
             remove_wait_queue() {
               _raw_spin_lock_irqsave();
               _raw_spin_unlock_irqrestore();
             }
             fput() {
               fput_many();
             }
           } /* poll_freewait */
         } /* do_select */
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
       } /* core_sys_select */
       poll_select_finish() {
         ktime_get_ts64() {
           arch_counter_read();
         }
         set_normalized_timespec64();
         put_timespec64();
       }
     } /* __arm64_sys_pselect6 */
   }
 }
 do_notify_resume() {
   mem_cgroup_handle_over_high();
   blkcg_maybe_throttle_current();
   __rseq_handle_notify_resume();
   fpsimd_restore_current_state() {
     __get_cpu_fpsimd_context();
     task_fpsimd_load() {
       have_cpu_fpsimd_context();
     }
     fpsimd_bind_task_to_cpu();
     put_cpu_fpsimd_context() {
       __put_cpu_fpsimd_context();
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_utimensat() {
       get_timespec64();
       get_timespec64();
       do_utimes() {
         __fdget() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
         }
         utimes_common.isra.0() {
           mnt_want_write() {
             __sb_start_write();
             __mnt_want_write();
           }
           down_write();
           notify_change() {
             current_time() {
               ktime_get_coarse_real_ts64();
               timestamp_truncate();
             }
             timestamp_truncate();
             timestamp_truncate();
             security_inode_setattr() {
               evm_inode_setattr();
             }
             ovl_setattr [overlay]() {
               setattr_prepare() {
                 inode_owner_or_capable();
               }
               ovl_want_write [overlay]() {
                 mnt_want_write() {
                   __sb_start_write();
                   __mnt_want_write();
                 }
               }
               ovl_copy_up [overlay]() {
                 ovl_copy_up_flags [overlay]() {
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   ovl_already_copied_up [overlay]() {
                     ovl_dentry_needs_data_copy_up [overlay]();
                   }
                   revert_creds();
                 }
               }
               ovl_dentry_upper [overlay]();
               down_write();
               ovl_override_creds [overlay]() {
                 override_creds();
               }
               notify_change() {
                 current_time() {
                   ktime_get_coarse_real_ts64();
                   timestamp_truncate();
                 }
                 timestamp_truncate();
                 timestamp_truncate();
                 security_inode_setattr() {
                   evm_inode_setattr();
                 }
                 ext4_setattr() {
                   setattr_prepare() {
                     inode_owner_or_capable();
                   }
                   setattr_copy();
                   __mark_inode_dirty() {
                     ext4_dirty_inode() {
                       __ext4_journal_start_sb() {
                         ext4_journal_check_start();
                         jbd2__journal_start() {
                           kmem_cache_alloc() {
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                           start_this_handle() {
                             _raw_read_lock();
                             add_transaction_credits();
                             _raw_read_unlock();
                           }
                         }
                       }
                       ext4_mark_inode_dirty() {
                         ext4_reserve_inode_write() {
                           __ext4_get_inode_loc() {
                             ext4_get_group_desc() {
                               __rcu_read_lock();
                               __rcu_read_unlock();
                             }
                             ext4_inode_table();
                             __getblk_gfp() {
                               __find_get_block() {
                                 mark_page_accessed();
                               }
                             }
                           }
                           __ext4_journal_get_write_access() {
                             jbd2_journal_get_write_access() {
                               jbd2_write_access_granted.isra.0.part.0() {
                                 __rcu_read_lock();
                                 __rcu_read_unlock();
                               }
                             }
                           }
                         }
                         ext4_mark_iloc_dirty() {
                           ext4_do_update_inode() {
                             _raw_spin_lock();
                             from_kuid() {
                               map_id_up();
                             }
                             from_kgid() {
                               map_id_up();
                             }
                             from_kprojid() {
                               map_id_up();
                             }
                             ext4_inode_csum_set();
                             _raw_spin_unlock();
                             __ext4_handle_dirty_metadata() {
                               jbd2_journal_dirty_metadata();
                             }
                             __brelse();
                           }
                         }
                       }
                       __ext4_journal_stop() {
                         jbd2_journal_stop() {
                           __wake_up() {
                             __wake_up_common_lock() {
                               _raw_spin_lock_irqsave();
                               __wake_up_common();
                               _raw_spin_unlock_irqrestore();
                             }
                           }
                           kmem_cache_free();
                         }
                       }
                     }
                   }
                 }
                 __fsnotify_parent();
                 fsnotify();
                 ima_inode_post_setattr();
                 evm_inode_post_setattr();
               }
               revert_creds();
               up_write();
               ovl_drop_write [overlay]() {
                 mnt_drop_write() {
                   __mnt_drop_write();
                   __sb_end_write();
                 }
               }
             }
             __fsnotify_parent();
             fsnotify();
             ima_inode_post_setattr();
             evm_inode_post_setattr();
           }
           up_write();
           mnt_drop_write() {
             __mnt_drop_write();
             __sb_end_write();
           }
         }
         fput() {
           fput_many();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_accept4() {
       __sys_accept4() {
         sockfd_lookup_light() {
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
         }
         sock_alloc() {
           new_inode_pseudo() {
             alloc_inode() {
               sock_alloc_inode() {
                 kmem_cache_alloc() {
                   should_failslab();
                   memcg_kmem_get_cache() {
                     __rcu_read_lock();
                     __rcu_read_unlock();
                   }
                   memcg_kmem_put_cache();
                 }
                 __init_waitqueue_head();
               }
               inode_init_always() {
                 make_kuid() {
                   map_id_range_down();
                 }
                 make_kgid() {
                   map_id_range_down();
                 }
                 __init_rwsem();
                 security_inode_alloc();
               }
             }
             _raw_spin_lock();
             _raw_spin_unlock();
           }
           get_next_ino();
         }
         __module_get();
         get_unused_fd_flags() {
           __alloc_fd() {
             _raw_spin_lock();
             expand_files();
             _raw_spin_unlock();
           }
         }
         sock_alloc_file() {
           alloc_file_pseudo() {
             d_alloc_pseudo() {
               __d_alloc() {
                 kmem_cache_alloc() {
                   should_failslab();
                   memcg_kmem_get_cache() {
                     __rcu_read_lock();
                     __rcu_read_unlock();
                   }
                   memcg_kmem_put_cache();
                 }
                 d_set_d_op();
               }
             }
             mntget();
             d_instantiate() {
               security_d_instantiate();
               _raw_spin_lock();
               __d_instantiate() {
                 d_flags_for_inode();
                 _raw_spin_lock();
                 _raw_spin_unlock();
               }
               _raw_spin_unlock();
             }
             alloc_file() {
               alloc_empty_file() {
                 __alloc_file() {
                   kmem_cache_alloc() {
                     should_failslab();
                     memcg_kmem_get_cache() {
                       __rcu_read_lock();
                       __rcu_read_unlock();
                     }
                     memcg_kmem_put_cache();
                   }
                   security_file_alloc() {
                     kmem_cache_alloc() {
                       should_failslab();
                       memcg_kmem_put_cache();
                     }
                     apparmor_file_alloc_security();
                   }
                   __mutex_init();
                 }
               }
             }
           }
         }
         security_socket_accept() {
           apparmor_socket_accept() {
             aa_sk_perm() {
               aa_label_sk_perm.part.0() {
                 aa_label_next_confined();
                 aa_profile_af_perm() {
                   aa_apply_modes_to_perms();
                   aa_check_perms();
                 }
                 aa_label_next_confined();
               }
             }
           }
         }
         inet_accept() {
           inet_csk_accept() {
             lock_sock_nested() {
               _raw_spin_lock_bh() {
                 __local_bh_disable_ip();
               }
               _raw_spin_unlock();
               __local_bh_enable_ip();
             }
             release_sock() {
               _raw_spin_lock_bh() {
                 __local_bh_disable_ip();
               }
               tcp_release_cb();
               _raw_spin_unlock_bh() {
                 __local_bh_enable_ip();
               }
             }
           }
         }
         fput() {
           fput_many() {
             task_work_add() {
               kick_process();
             }
           }
         }
         put_unused_fd() {
           _raw_spin_lock();
           _raw_spin_unlock();
         }
         fput() {
           fput_many();
         }
       }
     }
   }
 }
 do_notify_resume() {
   task_work_run() {
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
     ____fput() {
       __fput() {
         __fsnotify_parent();
         fsnotify();
         locks_remove_file();
         ima_file_free();
         sock_close() {
           __sock_release() {
             down_write();
             inet_release();
             up_write();
             module_put();
           }
         }
         module_put();
         put_pid();
         dput() {
           __rcu_read_lock();
           _raw_spin_lock();
           __rcu_read_unlock();
           _raw_spin_trylock();
           __dentry_kill() {
             dentry_unlink_inode() {
               _raw_spin_unlock();
               _raw_spin_unlock();
               iput() {
                 _raw_spin_lock();
                 _raw_spin_unlock();
                 evict() {
                   inode_wait_for_writeback() {
                     _raw_spin_lock();
                     __inode_wait_for_writeback() {
                       bit_waitqueue();
                     }
                     _raw_spin_unlock();
                   }
                   truncate_inode_pages_final() {
                     truncate_inode_pages_range();
                   }
                   clear_inode() {
                     _raw_spin_lock_irq();
                     _raw_spin_unlock_irq();
                   }
                   _raw_spin_lock();
                   wake_up_bit();
                   _raw_spin_unlock();
                   destroy_inode() {
                     __destroy_inode() {
                       inode_has_buffers();
                       security_inode_free() {
                         integrity_inode_free();
                       }
                       __fsnotify_inode_delete() {
                         fsnotify_destroy_marks() {
                           fsnotify_grab_connector() {
                             __srcu_read_lock();
                             __srcu_read_unlock();
                           }
                         }
                       }
                       locks_free_lock_context();
                     }
                     call_rcu() {
                       __call_rcu() {
                         rcu_segcblist_enqueue();
                       }
                     }
                   }
                 }
               }
             }
             _raw_spin_lock();
             _raw_spin_unlock();
             dentry_free() {
               kmem_cache_free();
             }
           }
         }
         mntput() {
           mntput_no_expire() {
             __rcu_read_lock();
             __rcu_read_unlock();
           }
         }
         security_file_free() {
           apparmor_file_free_security();
           kmem_cache_free();
         }
         call_rcu() {
           __call_rcu() {
             rcu_segcblist_enqueue();
           }
         }
       }
     }
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
   }
   mem_cgroup_handle_over_high();
   blkcg_maybe_throttle_current();
   __rseq_handle_notify_resume();
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_getppid() {
       __rcu_read_lock();
       __task_pid_nr_ns() {
         __rcu_read_lock();
         __rcu_read_unlock();
       }
       __rcu_read_unlock();
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_utimensat() {
       get_timespec64();
       get_timespec64();
       do_utimes() {
         __fdget() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
         }
         utimes_common.isra.0() {
           mnt_want_write() {
             __sb_start_write();
             __mnt_want_write();
           }
           down_write();
           notify_change() {
             current_time() {
               ktime_get_coarse_real_ts64();
               timestamp_truncate();
             }
             timestamp_truncate();
             timestamp_truncate();
             security_inode_setattr() {
               evm_inode_setattr();
             }
             ovl_setattr [overlay]() {
               setattr_prepare() {
                 inode_owner_or_capable();
               }
               ovl_want_write [overlay]() {
                 mnt_want_write() {
                   __sb_start_write();
                   __mnt_want_write();
                 }
               }
               ovl_copy_up [overlay]() {
                 ovl_copy_up_flags [overlay]() {
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   ovl_already_copied_up [overlay]() {
                     ovl_dentry_needs_data_copy_up [overlay]();
                   }
                   revert_creds();
                 }
               }
               ovl_dentry_upper [overlay]();
               down_write();
               ovl_override_creds [overlay]() {
                 override_creds();
               }
               notify_change() {
                 current_time() {
                   ktime_get_coarse_real_ts64();
                   timestamp_truncate();
                 }
                 timestamp_truncate();
                 timestamp_truncate();
                 security_inode_setattr() {
                   evm_inode_setattr();
                 }
                 ext4_setattr() {
                   setattr_prepare() {
                     inode_owner_or_capable();
                   }
                   setattr_copy();
                   __mark_inode_dirty() {
                     ext4_dirty_inode() {
                       __ext4_journal_start_sb() {
                         ext4_journal_check_start();
                         jbd2__journal_start() {
                           kmem_cache_alloc() {
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                           start_this_handle() {
                             _raw_read_lock();
                             add_transaction_credits();
                             _raw_read_unlock();
                           }
                         }
                       }
                       ext4_mark_inode_dirty() {
                         ext4_reserve_inode_write() {
                           __ext4_get_inode_loc() {
                             ext4_get_group_desc() {
                               __rcu_read_lock();
                               __rcu_read_unlock();
                             }
                             ext4_inode_table();
                             __getblk_gfp() {
                               __find_get_block() {
                                 mark_page_accessed();
                               }
                             }
                           }
                           __ext4_journal_get_write_access() {
                             jbd2_journal_get_write_access() {
                               jbd2_write_access_granted.isra.0.part.0() {
                                 __rcu_read_lock();
                                 __rcu_read_unlock();
                               }
                             }
                           }
                         }
                         ext4_mark_iloc_dirty() {
                           ext4_do_update_inode() {
                             _raw_spin_lock();
                             from_kuid() {
                               map_id_up();
                             }
                             from_kgid() {
                               map_id_up();
                             }
                             from_kprojid() {
                               map_id_up();
                             }
                             ext4_inode_csum_set();
                             _raw_spin_unlock();
                             __ext4_handle_dirty_metadata() {
                               jbd2_journal_dirty_metadata();
                             }
                             __brelse();
                           }
                         }
                       }
                       __ext4_journal_stop() {
                         jbd2_journal_stop() {
                           __wake_up() {
                             __wake_up_common_lock() {
                               _raw_spin_lock_irqsave();
                               __wake_up_common();
                               _raw_spin_unlock_irqrestore();
                             }
                           }
                           kmem_cache_free();
                         }
                       }
                     }
                   }
                 }
                 __fsnotify_parent();
                 fsnotify();
                 ima_inode_post_setattr();
                 evm_inode_post_setattr();
               }
               revert_creds();
               up_write();
               ovl_drop_write [overlay]() {
                 mnt_drop_write() {
                   __mnt_drop_write();
                   __sb_end_write();
                 }
               }
             }
             __fsnotify_parent();
             fsnotify();
             ima_inode_post_setattr();
             evm_inode_post_setattr();
           }
           up_write();
           mnt_drop_write() {
             __mnt_drop_write();
             __sb_end_write();
           }
         }
         fput() {
           fput_many();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_pselect6() {
       get_timespec64();
       poll_select_set_timeout() {
         ktime_get_ts64() {
           arch_counter_read();
         }
         timespec64_add_safe();
       }
       set_user_sigmask();
       arm64_preempt_schedule_irq() {
         preempt_schedule_irq() {
           rcu_note_context_switch() {
             rcu_preempt_deferred_qs() {
               rcu_preempt_need_deferred_qs();
             }
             rcu_qs();
           }
           _raw_spin_lock();
           update_rq_clock();
           pick_next_task_fair() {
             update_curr() {
               __calc_delta();
               update_min_vruntime();
             }
             check_cfs_rq_runtime();
             pick_next_entity() {
               clear_buddies();
             }
             update_curr() {
               __calc_delta();
               update_min_vruntime();
             }
             check_cfs_rq_runtime();
             pick_next_entity() {
               clear_buddies();
             }
             update_curr() {
               __calc_delta();
               update_min_vruntime();
             }
             check_cfs_rq_runtime();
             pick_next_entity() {
               clear_buddies();
             }
             update_curr() {
               __calc_delta();
               update_min_vruntime();
             }
             check_cfs_rq_runtime();
             pick_next_entity() {
               clear_buddies();
             }
             pick_next_entity() {
               clear_buddies();
             }
             put_prev_entity() {
               update_curr() {
                 update_min_vruntime();
                 cpuacct_charge() {
                   __rcu_read_lock();
                   __rcu_read_unlock();
                 }
                 __rcu_read_lock();
                 __cgroup_account_cputime() {
                   cgroup_base_stat_cputime_account_begin();
                   cgroup_base_stat_cputime_account_end.isra.0() {
                     cgroup_rstat_updated();
                   }
                 }
                 __rcu_read_unlock();
               }
               check_cfs_rq_runtime();
               __enqueue_entity();
               __update_load_avg_se();
               __update_load_avg_cfs_rq();
             }
             set_next_entity() {
               __update_load_avg_se() {
                 __accumulate_pelt_segments();
               }
               __update_load_avg_cfs_rq() {
                 __accumulate_pelt_segments();
               }
             }
             put_prev_entity() {
               update_curr();
               check_cfs_rq_runtime();
               check_spread.isra.0.part.0();
               __enqueue_entity();
               __update_load_avg_se();
               __update_load_avg_cfs_rq();
             }
             set_next_entity() {
               __update_load_avg_se() {
                 __accumulate_pelt_segments();
               }
               __update_load_avg_cfs_rq();
             }
           }
           check_and_switch_context();
           fpsimd_thread_switch() {
             __get_cpu_fpsimd_context();
             fpsimd_save() {
               have_cpu_fpsimd_context();
             }
             __put_cpu_fpsimd_context();
           }
           hw_breakpoint_thread_switch();
           uao_thread_switch();
           cpu_have_feature();
           erratum_1418040_thread_switch() {
             this_cpu_has_cap() {
               is_affected_midr_range_list();
             }
           }
           finish_task_switch() {
             _raw_spin_unlock_irq();
           }
         } /* preempt_schedule_irq */
       } /* arm64_preempt_schedule_irq */
       core_sys_select() {
         __rcu_read_lock();
         __rcu_read_unlock();
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
         do_select() {
           __rcu_read_lock();
           __rcu_read_unlock();
           select_estimate_accuracy() {
             ktime_get_ts64() {
               arch_counter_read();
             }
             set_normalized_timespec64();
           }
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
           sock_poll() {
             tcp_poll() {
               __pollwait() {
                 add_wait_queue() {
                   _raw_spin_lock_irqsave();
                   _raw_spin_unlock_irqrestore();
                 }
               }
             }
           }
           fput() {
             fput_many();
           }
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
           pipe_poll() {
             __pollwait() {
               add_wait_queue() {
                 _raw_spin_lock_irqsave();
                 _raw_spin_unlock_irqrestore();
               }
             }
           }
           fput() {
             fput_many();
           }
           schedule_hrtimeout_range() {
             schedule_hrtimeout_range_clock() {
               hrtimer_init_sleeper() {
                 __hrtimer_init();
               }
               hrtimer_start_range_ns() {
                 lock_hrtimer_base() {
                   _raw_spin_lock_irqsave();
                 }
                 get_nohz_timer_target();
                 enqueue_hrtimer();
                 _raw_spin_unlock_irqrestore();
               }
               schedule() {
                 rcu_note_context_switch() {
                   rcu_preempt_deferred_qs() {
                     rcu_preempt_need_deferred_qs();
                   }
                   rcu_qs();
                 }
                 _raw_spin_lock();
                 update_rq_clock();
                 deactivate_task() {
                   psi_task_change() {
                     record_times.isra.0();
                     record_times.isra.0();
                     record_times.isra.0();
                     record_times.isra.0();
                     record_times.isra.0();
                   }
                   dequeue_task_fair() {
                     dequeue_entity() {
                       update_curr() {
                         update_min_vruntime();
                         cpuacct_charge() {
                           __rcu_read_lock();
                           __rcu_read_unlock();
                         }
                         __rcu_read_lock();
                         __cgroup_account_cputime() {
                           cgroup_base_stat_cputime_account_begin();
                           cgroup_base_stat_cputime_account_end.isra.0() {
                             cgroup_rstat_updated();
                           }
                         }
                         __rcu_read_unlock();
                       }
                       __update_load_avg_se() {
                         __accumulate_pelt_segments();
                       }
                       __update_load_avg_cfs_rq() {
                         __accumulate_pelt_segments();
                       }
                       clear_buddies();
                       update_cfs_group();
                       update_min_vruntime();
                     }
                     set_next_buddy();
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                     update_cfs_group() {
                       reweight_entity() {
                         update_curr() {
                           __calc_delta();
                           update_min_vruntime();
                         }
                       }
                     }
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                     update_cfs_group() {
                       reweight_entity() {
                         update_curr() {
                           __calc_delta();
                           update_min_vruntime();
                         }
                       }
                     }
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                     update_cfs_group() {
                       reweight_entity() {
                         update_curr() {
                           __calc_delta();
                           update_min_vruntime();
                         }
                       }
                     }
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                     dbs_update_util_handler() {
                       cpufreq_this_cpu_can_update();
                     }
                     update_cfs_group() {
                       reweight_entity() {
                         update_curr() {
                           __calc_delta();
                           update_min_vruntime();
                         }
                       }
                     }
                     hrtick_update();
                   }
                 }
                 pick_next_task_fair() {
                   update_curr();
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     wakeup_preempt_entity.isra.0();
                     clear_buddies();
                   }
                   update_curr();
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     wakeup_preempt_entity.isra.0();
                     clear_buddies();
                   }
                   update_curr();
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     wakeup_preempt_entity.isra.0();
                     clear_buddies();
                   }
                   update_curr();
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     wakeup_preempt_entity.isra.0() {
                       __calc_delta();
                     }
                     wakeup_preempt_entity.isra.0() {
                       __calc_delta();
                     }
                     clear_buddies();
                   }
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     clear_buddies();
                   }
                   put_prev_entity() {
                     check_cfs_rq_runtime();
                   }
                   set_next_entity() {
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq();
                   }
                 }
                 check_and_switch_context();
                 fpsimd_thread_switch() {
                   __get_cpu_fpsimd_context();
                   fpsimd_save() {
                     have_cpu_fpsimd_context();
                   }
                   __put_cpu_fpsimd_context();
                 }
                 hw_breakpoint_thread_switch();
                 uao_thread_switch();
                 cpu_have_feature();
                 erratum_1418040_thread_switch() {
                   this_cpu_has_cap() {
                     is_affected_midr_range_list();
                   }
                 }
                 finish_task_switch() {
                   _raw_spin_unlock_irq();
                 }
               } /* schedule */
               hrtimer_try_to_cancel() {
                 hrtimer_active();
                 lock_hrtimer_base() {
                   _raw_spin_lock_irqsave();
                 }
                 __remove_hrtimer();
                 _raw_spin_unlock_irqrestore();
               }
             } /* schedule_hrtimeout_range_clock */
           } /* schedule_hrtimeout_range */
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
           sock_poll() {
             tcp_poll();
           }
           fput() {
             fput_many();
           }
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
           pipe_poll();
           fput() {
             fput_many();
           }
           poll_freewait() {
             remove_wait_queue() {
               _raw_spin_lock_irqsave();
               _raw_spin_unlock_irqrestore();
             }
             fput() {
               fput_many();
             }
             remove_wait_queue() {
               _raw_spin_lock_irqsave();
               _raw_spin_unlock_irqrestore();
             }
             fput() {
               fput_many();
             }
           }
         } /* do_select */
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
       } /* core_sys_select */
       poll_select_finish() {
         ktime_get_ts64() {
           arch_counter_read();
         }
         set_normalized_timespec64();
         put_timespec64();
       }
     } /* __arm64_sys_pselect6 */
   } /* el0_svc_common.constprop.0 */
 } /* el0_svc_handler */
 do_notify_resume() {
   mem_cgroup_handle_over_high();
   blkcg_maybe_throttle_current();
   __rseq_handle_notify_resume();
   fpsimd_restore_current_state() {
     __get_cpu_fpsimd_context();
     task_fpsimd_load() {
       have_cpu_fpsimd_context();
     }
     fpsimd_bind_task_to_cpu();
     put_cpu_fpsimd_context() {
       __put_cpu_fpsimd_context();
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_utimensat() {
       get_timespec64();
       get_timespec64();
       do_utimes() {
         __fdget() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
         }
         utimes_common.isra.0() {
           mnt_want_write() {
             __sb_start_write();
             __mnt_want_write();
           }
           down_write();
           notify_change() {
             current_time() {
               ktime_get_coarse_real_ts64();
               timestamp_truncate();
             }
             timestamp_truncate();
             timestamp_truncate();
             security_inode_setattr() {
               evm_inode_setattr();
             }
             ovl_setattr [overlay]() {
               setattr_prepare() {
                 inode_owner_or_capable();
               }
               ovl_want_write [overlay]() {
                 mnt_want_write() {
                   __sb_start_write();
                   __mnt_want_write();
                 }
               }
               ovl_copy_up [overlay]() {
                 ovl_copy_up_flags [overlay]() {
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   ovl_already_copied_up [overlay]() {
                     ovl_dentry_needs_data_copy_up [overlay]();
                   }
                   revert_creds();
                 }
               }
               ovl_dentry_upper [overlay]();
               down_write();
               ovl_override_creds [overlay]() {
                 override_creds();
               }
               notify_change() {
                 current_time() {
                   ktime_get_coarse_real_ts64();
                   timestamp_truncate();
                 }
                 timestamp_truncate();
                 timestamp_truncate();
                 security_inode_setattr() {
                   evm_inode_setattr();
                 }
                 ext4_setattr() {
                   setattr_prepare() {
                     inode_owner_or_capable();
                   }
                   setattr_copy();
                   __mark_inode_dirty() {
                     ext4_dirty_inode() {
                       __ext4_journal_start_sb() {
                         ext4_journal_check_start();
                         jbd2__journal_start() {
                           kmem_cache_alloc() {
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                           start_this_handle() {
                             _raw_read_lock();
                             add_transaction_credits();
                             _raw_read_unlock();
                           }
                         }
                       }
                       ext4_mark_inode_dirty() {
                         ext4_reserve_inode_write() {
                           __ext4_get_inode_loc() {
                             ext4_get_group_desc() {
                               __rcu_read_lock();
                               __rcu_read_unlock();
                             }
                             ext4_inode_table();
                             __getblk_gfp() {
                               __find_get_block() {
                                 mark_page_accessed();
                               }
                             }
                           }
                           __ext4_journal_get_write_access() {
                             jbd2_journal_get_write_access() {
                               jbd2_write_access_granted.isra.0.part.0() {
                                 __rcu_read_lock();
                                 __rcu_read_unlock();
                               }
                             }
                           }
                         }
                         ext4_mark_iloc_dirty() {
                           ext4_do_update_inode() {
                             _raw_spin_lock();
                             from_kuid() {
                               map_id_up();
                             }
                             from_kgid() {
                               map_id_up();
                             }
                             from_kprojid() {
                               map_id_up();
                             }
                             ext4_inode_csum_set() {
                             }
                             _raw_spin_unlock() {
                               rcu_note_context_switch() {
                                 rcu_preempt_deferred_qs() {
                                   rcu_preempt_need_deferred_qs();
                                 }
                                 rcu_qs();
                               }
                               _raw_spin_lock();
                               update_rq_clock();
                               pick_next_task_fair() {
                                 update_curr();
                                 check_cfs_rq_runtime();
                                 pick_next_entity() {
                                   wakeup_preempt_entity.isra.0();
                                   clear_buddies();
                                 }
                                 put_prev_entity() {
                                   update_curr() {
                                     update_min_vruntime();
                                     cpuacct_charge() {
                                       __rcu_read_lock();
                                       __rcu_read_unlock();
                                     }
                                     __rcu_read_lock();
                                     __cgroup_account_cputime() {
                                       cgroup_base_stat_cputime_account_begin();
                                       cgroup_base_stat_cputime_account_end.isra.0() {
                                         cgroup_rstat_updated();
                                       }
                                     }
                                     __rcu_read_unlock();
                                   }
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq() {
                                     __accumulate_pelt_segments();
                                   }
                                 }
                                 put_prev_entity() {
                                   update_curr() {
                                     __calc_delta();
                                     update_min_vruntime();
                                   }
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq() {
                                     __accumulate_pelt_segments();
                                   }
                                 }
                                 put_prev_entity() {
                                   update_curr() {
                                     __calc_delta();
                                     update_min_vruntime();
                                   }
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq() {
                                     __accumulate_pelt_segments();
                                   }
                                 }
                                 put_prev_entity() {
                                   update_curr() {
                                     __calc_delta();
                                     update_min_vruntime();
                                   }
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq() {
                                     __accumulate_pelt_segments();
                                   }
                                 }
                                 put_prev_entity() {
                                   update_curr();
                                   check_cfs_rq_runtime();
                                   __enqueue_entity();
                                   __update_load_avg_se() {
                                     __accumulate_pelt_segments();
                                   }
                                   __update_load_avg_cfs_rq();
                                 }
                                 set_next_entity() {
                                   __update_load_avg_se();
                                   __update_load_avg_cfs_rq();
                                 }
                               }
                               finish_task_switch() {
                                 _raw_spin_unlock_irq();
                               }
                             } /* _raw_spin_unlock */
                             __ext4_handle_dirty_metadata() {
                               jbd2_journal_dirty_metadata();
                             }
                             __brelse();
                           } /* ext4_do_update_inode */
                         } /* ext4_mark_iloc_dirty */
                       } /* ext4_mark_inode_dirty */
                       __ext4_journal_stop() {
                         jbd2_journal_stop() {
                           __wake_up() {
                             __wake_up_common_lock() {
                               _raw_spin_lock_irqsave();
                               __wake_up_common();
                               _raw_spin_unlock_irqrestore();
                             }
                           }
                           kmem_cache_free();
                         }
                       }
                     } /* ext4_dirty_inode */
                   } /* __mark_inode_dirty */
                 } /* ext4_setattr */
                 __fsnotify_parent();
                 fsnotify();
                 ima_inode_post_setattr();
                 evm_inode_post_setattr();
               } /* notify_change */
               revert_creds();
               up_write();
               ovl_drop_write [overlay]() {
                 mnt_drop_write() {
                   __mnt_drop_write();
                   __sb_end_write();
                 }
               }
             } /* ovl_setattr [overlay] */
             __fsnotify_parent();
             fsnotify();
             ima_inode_post_setattr();
             evm_inode_post_setattr();
           } /* notify_change */
           up_write();
           mnt_drop_write() {
             __mnt_drop_write();
             __sb_end_write();
           }
         } /* utimes_common.isra.0 */
         fput() {
           fput_many();
         }
       } /* do_utimes */
     } /* __arm64_sys_utimensat */
   } /* el0_svc_common.constprop.0 */
 } /* el0_svc_handler */
 do_notify_resume() {
   mem_cgroup_handle_over_high();
   blkcg_maybe_throttle_current();
   __rseq_handle_notify_resume();
   fpsimd_restore_current_state() {
     __get_cpu_fpsimd_context();
     task_fpsimd_load() {
       have_cpu_fpsimd_context();
     }
     fpsimd_bind_task_to_cpu();
     put_cpu_fpsimd_context() {
       __put_cpu_fpsimd_context();
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_accept4() {
       __sys_accept4() {
         sockfd_lookup_light() {
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
         }
         sock_alloc() {
           new_inode_pseudo() {
             alloc_inode() {
               sock_alloc_inode() {
                 kmem_cache_alloc() {
                   should_failslab();
                   memcg_kmem_get_cache() {
                     __rcu_read_lock();
                     __rcu_read_unlock();
                   }
                   memcg_kmem_put_cache();
                 }
                 __init_waitqueue_head();
               }
               inode_init_always() {
                 make_kuid() {
                   map_id_range_down();
                 }
                 make_kgid() {
                   map_id_range_down();
                 }
                 __init_rwsem();
                 security_inode_alloc();
               }
             }
             _raw_spin_lock();
             _raw_spin_unlock();
           }
           get_next_ino();
         }
         __module_get();
         get_unused_fd_flags() {
           __alloc_fd() {
             _raw_spin_lock();
             expand_files();
             _raw_spin_unlock();
           }
         }
         sock_alloc_file() {
           alloc_file_pseudo() {
             d_alloc_pseudo() {
               __d_alloc() {
                 kmem_cache_alloc() {
                   should_failslab();
                   memcg_kmem_get_cache() {
                     __rcu_read_lock();
                     __rcu_read_unlock();
                   }
                   memcg_kmem_put_cache();
                 }
                 d_set_d_op();
               }
             }
             mntget();
             d_instantiate() {
               security_d_instantiate();
               _raw_spin_lock();
               __d_instantiate() {
                 d_flags_for_inode();
                 _raw_spin_lock();
                 _raw_spin_unlock();
               }
               _raw_spin_unlock();
             }
             alloc_file() {
               alloc_empty_file() {
                 __alloc_file() {
                   kmem_cache_alloc() {
                     should_failslab();
                     memcg_kmem_get_cache() {
                       __rcu_read_lock();
                       __rcu_read_unlock();
                     }
                     memcg_kmem_put_cache();
                   }
                   security_file_alloc() {
                     kmem_cache_alloc() {
                       should_failslab();
                       memcg_kmem_put_cache();
                     }
                     apparmor_file_alloc_security();
                   }
                   __mutex_init();
                 }
               }
             }
           }
         }
         security_socket_accept() {
           apparmor_socket_accept() {
             aa_sk_perm() {
               aa_label_sk_perm.part.0() {
                 aa_label_next_confined();
                 aa_profile_af_perm() {
                   aa_apply_modes_to_perms();
                   aa_check_perms();
                 }
                 aa_label_next_confined();
               }
             }
           }
         }
         inet_accept() {
           inet_csk_accept() {
             lock_sock_nested() {
               _raw_spin_lock_bh() {
                 __local_bh_disable_ip();
               }
               _raw_spin_unlock();
               __local_bh_enable_ip();
             }
             release_sock() {
               _raw_spin_lock_bh() {
                 __local_bh_disable_ip();
               }
               tcp_release_cb();
               _raw_spin_unlock_bh() {
                 __local_bh_enable_ip();
               }
             }
           }
         }
         fput() {
           fput_many() {
             task_work_add() {
               kick_process();
             }
           }
         }
         put_unused_fd() {
           _raw_spin_lock();
           _raw_spin_unlock();
         }
         fput() {
           fput_many();
         }
       }
     }
   }
 }
 do_notify_resume() {
   task_work_run() {
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
     ____fput() {
       __fput() {
         __fsnotify_parent();
         fsnotify();
         locks_remove_file();
         ima_file_free();
         sock_close() {
           __sock_release() {
             down_write();
             inet_release();
             up_write();
             module_put();
           }
         }
         module_put();
         put_pid();
         dput() {
           __rcu_read_lock();
           _raw_spin_lock();
           __rcu_read_unlock();
           _raw_spin_trylock();
           __dentry_kill() {
             dentry_unlink_inode() {
               _raw_spin_unlock();
               _raw_spin_unlock();
               iput() {
                 _raw_spin_lock();
                 _raw_spin_unlock();
                 evict() {
                   inode_wait_for_writeback() {
                     _raw_spin_lock();
                     __inode_wait_for_writeback() {
                       bit_waitqueue();
                     }
                     _raw_spin_unlock();
                   }
                   truncate_inode_pages_final() {
                     truncate_inode_pages_range();
                   }
                   clear_inode() {
                     _raw_spin_lock_irq();
                     _raw_spin_unlock_irq();
                   }
                   _raw_spin_lock();
                   wake_up_bit();
                   _raw_spin_unlock();
                   destroy_inode() {
                     __destroy_inode() {
                       inode_has_buffers();
                       security_inode_free() {
                         integrity_inode_free();
                       }
                       __fsnotify_inode_delete() {
                         fsnotify_destroy_marks() {
                           fsnotify_grab_connector() {
                             __srcu_read_lock();
                             __srcu_read_unlock();
                           }
                         }
                       }
                       locks_free_lock_context();
                     }
                     call_rcu() {
                       __call_rcu() {
                         rcu_segcblist_enqueue();
                       }
                     }
                   }
                 }
               }
             }
             _raw_spin_lock();
             _raw_spin_unlock();
             dentry_free() {
               kmem_cache_free();
             }
           }
         }
         mntput() {
           mntput_no_expire() {
             __rcu_read_lock();
             __rcu_read_unlock();
           }
         }
         security_file_free() {
           apparmor_file_free_security();
           kmem_cache_free();
         }
         call_rcu() {
           __call_rcu() {
             rcu_segcblist_enqueue();
           }
         }
       }
     }
     _raw_spin_lock_irq();
     _raw_spin_unlock_irq();
   }
   mem_cgroup_handle_over_high();
   blkcg_maybe_throttle_current();
   __rseq_handle_notify_resume();
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_getppid() {
       __rcu_read_lock();
       __task_pid_nr_ns() {
         __rcu_read_lock();
         __rcu_read_unlock();
       }
       __rcu_read_unlock();
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_utimensat() {
       get_timespec64();
       get_timespec64();
       do_utimes() {
         __fdget() {
           __fget_light() {
             __fget() {
               __rcu_read_lock();
               __rcu_read_unlock();
             }
           }
         }
         utimes_common.isra.0() {
           mnt_want_write() {
             __sb_start_write();
             __mnt_want_write();
           }
           down_write();
           notify_change() {
             current_time() {
               ktime_get_coarse_real_ts64();
               timestamp_truncate();
             }
             timestamp_truncate();
             timestamp_truncate();
             security_inode_setattr() {
               evm_inode_setattr();
             }
             ovl_setattr [overlay]() {
               setattr_prepare() {
                 inode_owner_or_capable();
               }
               ovl_want_write [overlay]() {
                 mnt_want_write() {
                   __sb_start_write();
                   __mnt_want_write();
                 }
               }
               ovl_copy_up [overlay]() {
                 ovl_copy_up_flags [overlay]() {
                   ovl_override_creds [overlay]() {
                     override_creds();
                   }
                   ovl_already_copied_up [overlay]() {
                     ovl_dentry_needs_data_copy_up [overlay]();
                   }
                   revert_creds();
                 }
               }
               ovl_dentry_upper [overlay]();
               down_write();
               ovl_override_creds [overlay]() {
                 override_creds();
               }
               notify_change() {
                 current_time() {
                   ktime_get_coarse_real_ts64();
                   timestamp_truncate();
                 }
                 timestamp_truncate();
                 timestamp_truncate();
                 security_inode_setattr() {
                   evm_inode_setattr();
                 }
                 ext4_setattr() {
                   setattr_prepare() {
                     inode_owner_or_capable();
                   }
                   setattr_copy();
                   __mark_inode_dirty() {
                     ext4_dirty_inode() {
                       __ext4_journal_start_sb() {
                         ext4_journal_check_start();
                         jbd2__journal_start() {
                           kmem_cache_alloc() {
                             should_failslab();
                             memcg_kmem_put_cache();
                           }
                           start_this_handle() {
                             _raw_read_lock();
                             add_transaction_credits();
                             _raw_read_unlock();
                           }
                         }
                       }
                       ext4_mark_inode_dirty() {
                         ext4_reserve_inode_write() {
                           __ext4_get_inode_loc() {
                             ext4_get_group_desc() {
                               __rcu_read_lock();
                               __rcu_read_unlock();
                             }
                             ext4_inode_table();
                             __getblk_gfp() {
                               __find_get_block() {
                                 mark_page_accessed();
                               }
                             }
                           }
                           __ext4_journal_get_write_access() {
                             jbd2_journal_get_write_access() {
                               jbd2_write_access_granted.isra.0.part.0() {
                                 __rcu_read_lock();
                                 __rcu_read_unlock();
                               }
                             }
                           }
                         }
                         ext4_mark_iloc_dirty() {
                           ext4_do_update_inode() {
                             _raw_spin_lock();
                             from_kuid() {
                               map_id_up();
                             }
                             from_kgid() {
                               map_id_up();
                             }
                             from_kprojid() {
                               map_id_up();
                             }
                             ext4_inode_csum_set();
                             _raw_spin_unlock();
                             __ext4_handle_dirty_metadata() {
                               jbd2_journal_dirty_metadata();
                             }
                             __brelse();
                           }
                         }
                       }
                       __ext4_journal_stop() {
                         jbd2_journal_stop() {
                           __wake_up() {
                             __wake_up_common_lock() {
                               _raw_spin_lock_irqsave();
                               __wake_up_common();
                               _raw_spin_unlock_irqrestore();
                             }
                           }
                           kmem_cache_free();
                         }
                       }
                     }
                   }
                 }
                 __fsnotify_parent();
                 fsnotify();
                 ima_inode_post_setattr();
                 evm_inode_post_setattr();
               }
               revert_creds();
               up_write();
               ovl_drop_write [overlay]() {
                 mnt_drop_write() {
                   __mnt_drop_write();
                   __sb_end_write();
                 }
               }
             }
             __fsnotify_parent();
             fsnotify();
             ima_inode_post_setattr();
             evm_inode_post_setattr();
           }
           up_write();
           mnt_drop_write() {
             __mnt_drop_write();
             __sb_end_write();
           }
         }
         fput() {
           fput_many();
         }
       }
     }
   }
 }
 post_ttbr_update_workaround();
 el0_svc_handler() {
   el0_svc_common.constprop.0() {
     __arm64_sys_pselect6() {
       get_timespec64();
       poll_select_set_timeout() {
         ktime_get_ts64() {
           arch_counter_read();
         }
         timespec64_add_safe();
       }
       set_user_sigmask();
       core_sys_select() {
         __rcu_read_lock();
         __rcu_read_unlock();
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
         __check_object_size() {
           check_stack_object();
         }
         do_select() {
           __rcu_read_lock();
           __rcu_read_unlock();
           select_estimate_accuracy() {
             ktime_get_ts64() {
               arch_counter_read();
             }
             set_normalized_timespec64();
           }
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
           sock_poll() {
             tcp_poll() {
               __pollwait() {
                 add_wait_queue() {
                   _raw_spin_lock_irqsave();
                   _raw_spin_unlock_irqrestore();
                 }
               }
             }
           }
           fput() {
             fput_many();
           }
           __fdget() {
             __fget_light() {
               __fget() {
                 __rcu_read_lock();
                 __rcu_read_unlock();
               }
             }
           }
           pipe_poll() {
             __pollwait() {
               add_wait_queue() {
                 _raw_spin_lock_irqsave();
                 _raw_spin_unlock_irqrestore();
               }
             }
           }
           fput() {
             fput_many();
           }
           schedule_hrtimeout_range() {
             schedule_hrtimeout_range_clock() {
               hrtimer_init_sleeper() {
                 __hrtimer_init();
               }
               hrtimer_start_range_ns() {
                 lock_hrtimer_base() {
                   _raw_spin_lock_irqsave();
                 }
                 get_nohz_timer_target();
                 enqueue_hrtimer();
                 _raw_spin_unlock_irqrestore();
               }
               schedule() {
                 rcu_note_context_switch() {
                   rcu_preempt_deferred_qs() {
                     rcu_preempt_need_deferred_qs();
                   }
                   rcu_qs();
                 }
                 _raw_spin_lock();
                 update_rq_clock();
                 deactivate_task() {
                   psi_task_change() {
                     record_times.isra.0();
                     record_times.isra.0();
                     record_times.isra.0();
                     record_times.isra.0();
                     record_times.isra.0();
                   }
                   dequeue_task_fair() {
                     dequeue_entity() {
                       update_curr() {
                         update_min_vruntime();
                         cpuacct_charge() {
                           __rcu_read_lock();
                           __rcu_read_unlock();
                         }
                         __rcu_read_lock();
                         __cgroup_account_cputime() {
                           cgroup_base_stat_cputime_account_begin();
                           cgroup_base_stat_cputime_account_end.isra.0() {
                             cgroup_rstat_updated();
                           }
                         }
                         __rcu_read_unlock();
                       }
                       __update_load_avg_se() {
                         __accumulate_pelt_segments();
                       }
                       __update_load_avg_cfs_rq() {
                         __accumulate_pelt_segments();
                       }
                       clear_buddies();
                       update_cfs_group();
                       update_min_vruntime();
                     }
                     set_next_buddy();
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                     update_cfs_group() {
                       reweight_entity() {
                         update_curr() {
                           __calc_delta();
                           update_min_vruntime();
                         }
                       }
                     }
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                     update_cfs_group() {
                       reweight_entity() {
                         update_curr() {
                           __calc_delta();
                           update_min_vruntime();
                         }
                       }
                     }
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                     update_cfs_group() {
                       reweight_entity() {
                         update_curr() {
                           __calc_delta();
                           update_min_vruntime();
                         }
                       }
                     }
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq() {
                       __accumulate_pelt_segments();
                     }
                     dbs_update_util_handler() {
                       cpufreq_this_cpu_can_update();
                     }
                     update_cfs_group() {
                       reweight_entity() {
                         update_curr() {
                           __calc_delta();
                           update_min_vruntime();
                         }
                       }
                     }
                     hrtick_update();
                   }
                 }
                 pick_next_task_fair() {
                   update_curr();
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     wakeup_preempt_entity.isra.0();
                     clear_buddies();
                   }
                   update_curr();
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     wakeup_preempt_entity.isra.0();
                     clear_buddies();
                   }
                   update_curr();
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     wakeup_preempt_entity.isra.0();
                     clear_buddies();
                   }
                   update_curr();
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     wakeup_preempt_entity.isra.0();
                     clear_buddies();
                   }
                   check_cfs_rq_runtime();
                   pick_next_entity() {
                     clear_buddies();
                   }
                   put_prev_entity() {
                     check_cfs_rq_runtime();
                   }
                   set_next_entity() {
                     __update_load_avg_se() {
                       __accumulate_pelt_segments();
                     }
                     __update_load_avg_cfs_rq();
                   }
                 }
                 check_and_switch_context();
                 fpsimd_thread_switch() {
                   __get_cpu_fpsimd_context();
                   fpsimd_save() {
                     have_cpu_fpsimd_context();
                   }
                   __put_cpu_fpsimd_context();
                 }
                 hw_breakpoint_thread_switch();
                 uao_thread_switch();
                 cpu_have_feature();
                 erratum_1418040_thread_switch() {
                   this_cpu_has_cap() {
                     is_affected_midr_range_list();
                   }
                 }
